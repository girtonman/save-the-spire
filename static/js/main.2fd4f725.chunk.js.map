{"version":3,"sources":["styles/Potions.module.css","utils/ReduxStore.js","components/NavItem.js","components/ItemNavBar.js","components/CardsJSON.js","components/Item.js","components/Search.js","components/CardSelector.js","components/RelicsJSON.js","components/RelicSelector.js","components/ItemList.js","components/SaveEditNavBar.js","components/CardList.js","components/RelicList.js","components/PotionsJSON.js","components/PotionList.js","components/MiscList.js","components/Editor.js","components/FileUpload.js","components/Basic.js","components/Advanced.js","components/Converter.js","components/SaveEdit.js","App.js","index.js"],"names":["module","exports","types","actions","selectBasic","type","payload","selectAdvanced","selectConverter","selectCards","selectRelics","updateJson","json","addCard","card","removeCard","index","setPotion","potion","addRelic","relic","bottleTarget","removeRelic","updateMisc","key","value","setFileName","filename","store","createStore","state","action","itemPage","savePage","data","cards","length","splice","newPotions","potions","newState","relics","startsWith","bottledKey","replace","toLowerCase","current_health","max_health","gold","hand_size","searchTerm","upgraded","NavItem","hover","toggleHover","setState","styles","navitem","textAlign","borderRight","height","display","alignItems","justifyContent","backgroundColor","this","props","isSelected","a","width","cursor","onMouseEnter","onMouseLeave","onClick","style","name","Component","ItemNavBar","gridTemplateColumns","color","connect","dispatch","bindActionCreators","JSON","parse","Item","specificStyle","border","bottled","minHeight","boxSizing","createStyle","active","isPlaceholder","split","id","className","potion_placeholder","Search","onChange","event","onSearchTermChanged","target","placeholder","fontSize","filterOptions","rarity","BASIC","COMMON","UNCOMMON","RARE","SPECIAL","CURSE","RED","BLUE","GREEN","COLORLESS","cost","ATTACK","POWER","SKILL","STATUS","CardSelector","filters","sortedCards","Object","keys","sort","toggleCheckbox","upgrades","property","options","cardName","entries","map","option","trim","includes","String","overflowY","alignContent","upgrade","gridRow","cardsList","filter","filterCard","onFiltersChanged","bind","CardFilter","selected","output","label","toUpperCase","substring","onSelectedChanged","handleSelectedChanged","valueRenderer","disableSearch","bottledTypes","RelicSelector","sortedRelics","finishBottling","modal","top","left","right","bottom","transform","relicsList","uniqueCards","i","arr","findIndex","c","bottleableCardType","bottleableCards","isOpen","content","ItemList","overflowX","SaveEditNavBar","CardList","bottledIndices","undefined","gridColumn","gridAutoRows","maxHeight","marginBottom","RelicList","PotionList","showModal","modalIndex","sortedPotions","potionlist","item","MiscList","updateValues","whiteSpace","Editor","showConverter","seed","alert","href","FileUpload","file","convertToByteArray","byte_array","push","charCodeAt","xorWithKey","out","fromCharCode","join","decrypt","encrypted","decrypted","atob","LosslessJSON","e","console","log","readFile","f","reader","FileReader","onload","evt","result","readAsText","handleFileSelect","stopPropagation","preventDefault","dataTransfer","files","handleDragOver","dropEffect","escape","size","lastModified","lastModifiedDate","toLocaleDateString","fileupload","padding","margin","dropzone","borderRadius","font","textarea","onDragOver","onDrop","createFileInfo","Basic","Advanced","base64","encrypt","btoa","handleBase64Change","handleJsonChange","receiveData","nextProps","textbox","Converter","downloadFile","element","document","createElement","Blob","URL","createObjectURL","download","click","readOnly","SaveEdit","app","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2fd4f725.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"potion\":\"Potions_potion__3nd3p\",\"potion-ancient\":\"Potions_potion-ancient__3Bml- Potions_potion__3nd3p\",\"potion-block\":\"Potions_potion-block__2YNfR Potions_potion__3nd3p\",\"potion-dexterity\":\"Potions_potion-dexterity__3TrRq Potions_potion__3nd3p\",\"potion-elixir\":\"Potions_potion-elixir__-ZHt1 Potions_potion__3nd3p\",\"potion-energy\":\"Potions_potion-energy__voPLe Potions_potion__3nd3p\",\"potion-explosive\":\"Potions_potion-explosive__2GtvZ Potions_potion__3nd3p\",\"potion-fire\":\"Potions_potion-fire__3vjwa Potions_potion__3nd3p\",\"potion-health\":\"Potions_potion-health__qRM7I Potions_potion__3nd3p\",\"potion-placeholder\":\"Potions_potion-placeholder__1YYNI Potions_potion__3nd3p\",\"potion-poison\":\"Potions_potion-poison__10v6d Potions_potion__3nd3p\",\"potion-regen\":\"Potions_potion-regen__27p7w Potions_potion__3nd3p\",\"potion-strength\":\"Potions_potion-strength__22ATL Potions_potion__3nd3p\",\"potion-swift\":\"Potions_potion-swift__1qMp6 Potions_potion__3nd3p\",\"potion-weak\":\"Potions_potion-weak__1sqY3 Potions_potion__3nd3p\"};","import {createStore} from \"redux\";\r\n\r\n\r\nconst types = {\r\n    SELECT_SAVE_PAGE: 'SELECT_SAVE_PAGE',\r\n    SELECT_ITEM_PAGE: 'SELECT_ITEM_PAGE',\r\n    UPDATE_JSON: 'UPDATE JSON',\r\n    ADD_CARD: 'ADD CARD',\r\n    REMOVE_CARD: 'REMOVE_CARD',\r\n    SET_POTION: 'SET_POTION',\r\n    ADD_RELIC: 'ADD_RELIC',\r\n    REMOVE_RELIC: 'REMOVE_RELIC',\r\n    UPDATE_MISC: 'UPDATE_MISC',\r\n    SET_FILE_NAME: 'SET_FILE_NAME'\r\n};\r\n\r\nconst actions = {\r\n    selectBasic: () => ({type: types.SELECT_SAVE_PAGE, payload: 'Basic'}),\r\n    selectAdvanced: () => ({type: types.SELECT_SAVE_PAGE, payload: 'Advanced'}),\r\n    selectConverter: () => ({type: types.SELECT_SAVE_PAGE, payload: 'Converter'}),\r\n    selectCards: () => ({type: types.SELECT_ITEM_PAGE, payload: 'Cards'}),\r\n    selectRelics: () => ({type: types.SELECT_ITEM_PAGE, payload: 'Relics'}),\r\n    updateJson: (json) => ({type: types.UPDATE_JSON, payload: json}),\r\n    addCard: (card) => ({type: types.ADD_CARD, payload: card}),\r\n    removeCard: (index) => ({type: types.REMOVE_CARD, payload: index}),\r\n    setPotion: (index, potion) => ({type: types.SET_POTION, payload: {index, potion}}),\r\n    addRelic: (relic, bottleTarget) => ({type: types.ADD_RELIC, payload: {relic, bottleTarget}}),\r\n    removeRelic: (index) => ({type: types.REMOVE_RELIC, payload: index}),\r\n    updateMisc: (key, value) => ({type: types.UPDATE_MISC, payload: {key, value}}),\r\n    setFileName: (filename) => ({type: types.SET_FILE_NAME, payload: filename})\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === types.SELECT_ITEM_PAGE) {\r\n        return {\r\n            ...state,\r\n            itemPage: action.payload\r\n        };\r\n    }\r\n    else if (action.type === types.SELECT_SAVE_PAGE) {\r\n        return {\r\n            ...state,\r\n            savePage: action.payload,\r\n        };\r\n    }\r\n    else if (action.type === types.UPDATE_JSON) {\r\n        return {\r\n            ...state,\r\n            data: action.payload\r\n        };\r\n    } else if (action.type === types.ADD_CARD) {\r\n        return {\r\n            ...state,\r\n            data: {\r\n                ...state.data,\r\n                cards: [...state.data.cards, action.payload]\r\n            }\r\n        };\r\n    } else if (action.type === types.REMOVE_CARD) {\r\n        if(state.data.cards.length > action.payload) {\r\n            state.data.cards.splice(action.payload, 1);\r\n        }\r\n        return {\r\n            ...state,\r\n            data: {\r\n                ...state.data,\r\n                cards: state.data.cards\r\n            }\r\n        };\r\n    } else if (action.type === types.SET_POTION) {\r\n        let newPotions = state.data.potions\r\n        newPotions[action.payload.index] = action.payload.potion\r\n        return {\r\n            ...state,\r\n            data: {\r\n                ...state.data,\r\n                potions: newPotions\r\n            }\r\n        };\r\n    } else if (action.type === types.ADD_RELIC) {\r\n        const newState = {\r\n            ...state,\r\n            data: {\r\n                ...state.data,\r\n                relics: [...state.data.relics, action.payload.relic]\r\n            }\r\n        }\r\n\r\n        if (action.payload.relic.startsWith('Bottled ')) {\r\n            const bottledKey = action.payload.relic.replace(' ', '_').toLowerCase();\r\n            newState.data[bottledKey] = action.payload.bottleTarget;\r\n        }\r\n\r\n        return newState;\r\n    } else if (action.type === types.REMOVE_RELIC) {\r\n        if(state.data.relics.length > action.payload) {\r\n            state.data.relics.splice(action.payload, 1);\r\n        }\r\n        const relic = state.data.relics[action.payload];\r\n        const newState = {\r\n            ...state,\r\n            data: {\r\n                ...state.data,\r\n                relics: state.data.relics\r\n            }\r\n        };\r\n\r\n        if (relic.startsWith('Bottled ')) {\r\n            const bottledKey = relic.replace(' ', '_').toLowerCase();\r\n            delete newState.data[bottledKey];\r\n        }\r\n\r\n        return newState;\r\n    } else if (action.type === types.UPDATE_MISC) {\r\n        return {\r\n            ...state,\r\n            data: {\r\n                ...state.data,\r\n                [action.payload.key]: action.payload.value\r\n            }\r\n        };\r\n    } else if (action.type === types.SET_FILE_NAME) {\r\n        return {\r\n            ...state,\r\n            filename: action.payload\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst initialState = {\r\n    itemPage: 'Cards',\r\n    savePage: 'Basic',\r\n    data: {\r\n        current_health: 80,\r\n        max_health: 80,\r\n        gold: 99,\r\n        hand_size: 5,\r\n        cards: [],\r\n        relics: [],\r\n        potions: [\"Potion Slot\", \"Potion Slot\", \"Potion Slot\"]\r\n    },\r\n    searchTerm: '',\r\n    upgraded: false,\r\n    filename: ''\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\n\r\nexport {\r\n    store, types, actions\r\n}\r\n","import React, {Component} from \"react\";\r\n\r\nclass NavItem extends Component {\r\n\r\n    state = {\r\n        hover: false\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState({hover: !this.state.hover});\r\n    }\r\n\r\n    render() {\r\n        const styles = {\r\n            navitem: {\r\n                textAlign: 'center',\r\n                borderRight: '1px solid',\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundColor: (this.props.isSelected || this.state.hover) ? '#2e282a' : '#3e383a',\r\n            },\r\n            a: {\r\n                width: '100%',\r\n                cursor: 'default'\r\n            },\r\n        };\r\n\r\n        return(\r\n            <div onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={this.props.onClick} style={styles.navitem}>\r\n                <div style={styles.a}>{this.props.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavItem;\r\n","import React, {Component} from \"react\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../utils/ReduxStore'\r\nimport NavItem from \"./NavItem\";\r\n\r\nclass ItemNavBar extends Component{\r\n\r\n    render(){\r\n        const styles = {\r\n            navbar: {\r\n                display: 'grid',\r\n                gridTemplateColumns: '50% 50%',\r\n                backgroundColor: '#3e383a',\r\n                height: '60px',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                color: 'white',\r\n            },\r\n        };\r\n\r\n\r\n        return(\r\n            <div style={styles.navbar}>\r\n                <NavItem \r\n                    isSelected={this.props.itemPage === 'Cards'} \r\n                    name={'Cards'}\r\n                    onClick={() => this.props.actions.selectCards()}\r\n                />\r\n                <NavItem \r\n                    isSelected={this.props.itemPage === 'Relics'} \r\n                    name={'Relics'}\r\n                    onClick={() => this.props.actions.selectRelics()}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    itemPage: state.itemPage \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemNavBar);\r\n","let cards = `{\r\n    \"Anger\": {\r\n        \"name\": \"Anger\",\r\n        \"cost\": 0,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Place a copy of this card into your discard pile.\"]\r\n    },\r\n    \"Armaments\": {\r\n        \"name\": \"Armaments\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Upgrade a card in your hand for the rest of combat.\", \"Gain !B! Block. NL Upgrade ALL cards in your hand for the rest of combat.\"]\r\n    },\r\n    \"Barricade\": {\r\n        \"name\": \"Barricade\",\r\n        \"cost\": 3,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Block no longer expires at the start of your turn.\"]\r\n    },\r\n    \"Bash\": {\r\n        \"name\": \"Bash\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"BASIC\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Apply !M! Vulnerable.\"]\r\n    },\r\n    \"Battle Trance\": {\r\n        \"name\": \"Battle Trance\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Draw !M! cards. NL You cannot draw any additional cards this turn.\"]\r\n    },\r\n    \"Berserk\": {\r\n        \"name\": \"Berserk\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"If your HP is at or below 50%, gain [R] at the start of each turn.\"]\r\n    },\r\n    \"Blood for Blood\": {\r\n        \"name\": \"Blood for Blood\",\r\n        \"cost\": 4,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Costs 1 less [R] NL for each time you lose HP in combat. NL Deal !D! damage.\"]\r\n    },\r\n    \"Bloodletting\": {\r\n        \"name\": \"Bloodletting\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain [R]. NL Lose 3 HP.\", \"Gain [R] [R]. NL Lose 3 HP.\"]\r\n    },\r\n    \"Bludgeon\": {\r\n        \"name\": \"Bludgeon\",\r\n        \"cost\": 3,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Deal !D! damage.\"]\r\n    },\r\n    \"Body Slam\": {\r\n        \"name\": \"Body Slam\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal damage equal to your current Block.\", \" NL (Deals !D! damage.)\"]\r\n    },\r\n    \"Brutality\": {\r\n        \"name\": \"Brutality\",\r\n        \"cost\": 0,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"At the start of your turn, lose 1 HP and draw 1 card.\", \"Innate. NL At the start of your turn, lose 1 HP and draw 1 card.\"]\r\n    },\r\n    \"Burning Pact\": {\r\n        \"name\": \"Burning Pact\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Exhaust 1 card. NL Draw !M! cards.\"]\r\n    },\r\n    \"Carnage\": {\r\n        \"name\": \"Carnage\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Ethereal. NL Deal !D! damage.\"]\r\n    },\r\n    \"Clash\": {\r\n        \"name\": \"Clash\",\r\n        \"cost\": 0,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Can only be played if every card in your hand is an Attack. NL Deal !D! damage.\"]\r\n    },\r\n    \"Cleave\": {\r\n        \"name\": \"Cleave\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage to ALL enemies.\"]\r\n    },\r\n    \"Clothesline\": {\r\n        \"name\": \"Clothesline\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Apply !M! Weak.\"]\r\n    },\r\n    \"Combust\": {\r\n        \"name\": \"Combust\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"At the end of your turn, lose 1 HP and deal !M! damage to ALL enemies.\"]\r\n    },\r\n    \"Corruption\": {\r\n        \"name\": \"Corruption\",\r\n        \"cost\": 3,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Skills cost 0. NL Whenever you play a Skill, Exhaust it.\"]\r\n    },\r\n    \"Dark Embrace\": {\r\n        \"name\": \"Dark Embrace\",\r\n        \"cost\": 2,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Whenever a card is exhausted, NL draw 1 card.\"]\r\n    },\r\n    \"Defend_R\": {\r\n        \"name\": \"Defend_R\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"BASIC\",\r\n        \"descriptions\": [\"Gain !B! Block.\"]\r\n    },\r\n    \"Demon Form\": {\r\n        \"name\": \"Demon Form\",\r\n        \"cost\": 3,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"At the start of each turn, gain !M! Strength.\"]\r\n    },\r\n    \"Disarm\": {\r\n        \"name\": \"Disarm\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Enemy loses !M! Strength. NL Exhaust.\"]\r\n    },\r\n    \"Double Tap\": {\r\n        \"name\": \"Double Tap\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"This turn, your next Attack is played twice.\", \"This turn, your next !M! Attacks are played twice.\"]\r\n    },\r\n    \"Dropkick\": {\r\n        \"name\": \"Dropkick\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL If the enemy is Vulnerable, NL Gain [R] and NL draw 1 card.\"]\r\n    },\r\n    \"Dual Wield\": {\r\n        \"name\": \"Dual Wield\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Create a copy of an Attack or Power card in your hand.\", \"Create 2 copies of an Attack or Power card in your hand.\"]\r\n    },\r\n    \"Entrench\": {\r\n        \"name\": \"Entrench\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Double your current Block.\", \"Double your current Block.\"]\r\n    },\r\n    \"Evolve\": {\r\n        \"name\": \"Evolve\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Shuffle 2 Wounds into your draw pile. NL Whenever you draw a Wound, draw !M! card.\", \"Shuffle 2 Wounds into your draw pile. NL Whenever you draw a Wound, draw !M! cards.\"]\r\n    },\r\n    \"Exhume\": {\r\n        \"name\": \"Exhume\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Choose an exhausted card and put it in your hand. NL Exhaust.\"]\r\n    },\r\n    \"Feed\": {\r\n        \"name\": \"Feed\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Deal !D! damage. NL If this kills a non-minion enemy, gain !M! permanent Max HP. Exhaust.\"]\r\n    },\r\n    \"Feel No Pain\": {\r\n        \"name\": \"Feel No Pain\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Whenever a card is exhausted, NL gain !M! Block.\"]\r\n    },\r\n    \"Fiend Fire\": {\r\n        \"name\": \"Fiend Fire\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Exhaust your hand. NL Deal !D! damage for each exhausted card. NL Exhaust.\"]\r\n    },\r\n    \"Fire Breathing\": {\r\n        \"name\": \"Fire Breathing\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"At the end of your turn, for each Attack played this turn deal 1 damage to ALL enemies.\"]\r\n    },\r\n    \"Flame Barrier\": {\r\n        \"name\": \"Flame Barrier\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Whenever you are attacked this turn, deal !M! damage to the attacker. \"]\r\n    },\r\n    \"Flex\": {\r\n        \"name\": \"Flex\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Gain !M! Strength. NL At the end of your turn, lose !M! Strength.\"]\r\n    },\r\n    \"Ghostly Armor\": {\r\n        \"name\": \"Ghostly Armor\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Ethereal. NL Gain !B! Block.\"]\r\n    },\r\n    \"Havoc\": {\r\n        \"name\": \"Havoc\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Play the top card of your draw pile and exhaust it.\"]\r\n    },\r\n    \"Headbutt\": {\r\n        \"name\": \"Headbutt\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Place a card from your discard pile on top of your draw pile.\"]\r\n    },\r\n    \"Heavy Blade\": {\r\n        \"name\": \"Heavy Blade\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Strength affects Heavy Blade !M! times.\"]\r\n    },\r\n    \"Hemokinesis\": {\r\n        \"name\": \"Hemokinesis\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Lose !M! HP. NL Deal !D! damage.\"]\r\n    },\r\n    \"Immolate\": {\r\n        \"name\": \"Immolate\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Exhaust 1 card. If the chosen card was a Status or Curse, deal !D! damage to ALL enemies.\"]\r\n    },\r\n    \"Impervious\": {\r\n        \"name\": \"Impervious\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Exhaust.\"]\r\n    },\r\n    \"Infernal Blade\": {\r\n        \"name\": \"Infernal Blade\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Add a random Attack to your hand. NL It costs 0 this turn. NL Exhaust.\"]\r\n    },\r\n    \"Inflame\": {\r\n        \"name\": \"Inflame\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain !M! Strength.\"]\r\n    },\r\n    \"Intimidate\": {\r\n        \"name\": \"Intimidate\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Apply !M! Weak to ALL enemies. NL Exhaust.\"]\r\n    },\r\n    \"Iron Wave\": {\r\n        \"name\": \"Iron Wave\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Deal !D! damage.\"]\r\n    },\r\n    \"Juggernaut\": {\r\n        \"name\": \"Juggernaut\",\r\n        \"cost\": 2,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Whenever you gain Block, deal !M! damage to a random enemy.\"]\r\n    },\r\n    \"Limit Break\": {\r\n        \"name\": \"Limit Break\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Double your Strength. NL Exhaust.\", \"Double your Strength.\"]\r\n    },\r\n    \"Metallicize\": {\r\n        \"name\": \"Metallicize\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"At the end of your turn, gain !M! Block.\"]\r\n    },\r\n    \"Offering\": {\r\n        \"name\": \"Offering\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Lose 4 HP. NL Gain [R] [R]. NL Draw !M! cards. NL Exhaust.\"]\r\n    },\r\n    \"Perfected Strike\": {\r\n        \"name\": \"Perfected Strike\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Deals an additional +2 damage for ALL of your cards containing \\\\\"Strike\\\\\".\", \"Deal !D! damage. NL Deals an additional +3 damage for ALL of your cards containing \\\\\"Strike\\\\\".\"]\r\n    },\r\n    \"Pommel Strike\": {\r\n        \"name\": \"Pommel Strike\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Draw !M! card.\", \"Deal !D! damage. NL Draw !M! cards.\"]\r\n    },\r\n    \"Power Through\": {\r\n        \"name\": \"Power Through\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Add 2 Wounds to your hand. NL Gain !B! Block.\"]\r\n    },\r\n    \"Pummel\": {\r\n        \"name\": \"Pummel\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage !M! times. NL Exhaust.\"]\r\n    },\r\n    \"Rage\": {\r\n        \"name\": \"Rage\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Whenever you play an Attack this turn, gain !M! Block.\"]\r\n    },\r\n    \"Rampage\": {\r\n        \"name\": \"Rampage\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Every time this card is played, increase its damage by !M! for this combat.\"]\r\n    },\r\n    \"Reaper\": {\r\n        \"name\": \"Reaper\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Deal !D! damage to ALL enemies. Heal for unblocked damage dealt. NL Exhaust.\"]\r\n    },\r\n    \"Reckless Charge\": {\r\n        \"name\": \"Reckless Charge\",\r\n        \"cost\": 0,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain 1 Vulnerable. NL Deal !D! damage.\"]\r\n    },\r\n    \"Rupture\": {\r\n        \"name\": \"Rupture\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Whenever you lose HP from a card, NL gain 1 Strength.\"]\r\n    },\r\n    \"Searing Blow\": {\r\n        \"name\": \"Searing Blow\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Can be upgraded any number of times.\"]\r\n    },\r\n    \"Second Wind\": {\r\n        \"name\": \"Second Wind\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Exhaust all non-Attack cards in your hand and gain !B! Block for each.\"]\r\n    },\r\n    \"Seeing Red\": {\r\n        \"name\": \"Seeing Red\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain [R] [R]. NL Exhaust.\"]\r\n    },\r\n    \"Sentinel\": {\r\n        \"name\": \"Sentinel\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL If this card is exhausted, NL gain [R] [R].\", \"Gain !B! Block. NL If this card is exhausted, NL gain [R] [R] [R].\"]\r\n    },\r\n    \"Sever Soul\": {\r\n        \"name\": \"Sever Soul\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Exhaust all non-Attack cards in your hand. NL Deal !D! damage.\"]\r\n    },\r\n    \"Shockwave\": {\r\n        \"name\": \"Shockwave\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Apply !M! Weak and Vulnerable to ALL enemies. NL Exhaust.\"]\r\n    },\r\n    \"Shrug It Off\": {\r\n        \"name\": \"Shrug It Off\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Draw 1 card.\"]\r\n    },\r\n    \"Spot Weakness\": {\r\n        \"name\": \"Spot Weakness\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"If an enemy intends to attack, gain !M! Strength.\"]\r\n    },\r\n    \"Strike_R\": {\r\n        \"name\": \"Strike_R\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"BASIC\",\r\n        \"descriptions\": [\"Deal !D! damage.\"]\r\n    },\r\n    \"Sword Boomerang\": {\r\n        \"name\": \"Sword Boomerang\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage to a random enemy !M! times.\"]\r\n    },\r\n    \"Thunderclap\": {\r\n        \"name\": \"Thunderclap\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage and apply 1 Vulnerable to ALL enemies.\"]\r\n    },\r\n    \"True Grit\": {\r\n        \"name\": \"True Grit\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Exhaust a random card in your hand.\", \"Gain !B! Block. NL Exhaust a card in your hand.\"]\r\n    },\r\n    \"Twin Strike\": {\r\n        \"name\": \"Twin Strike\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage twice.\"]\r\n    },\r\n    \"Uppercut\": {\r\n        \"name\": \"Uppercut\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Apply !M! Weak. NL Apply !M! Vulnerable.\"]\r\n    },\r\n    \"Warcry\": {\r\n        \"name\": \"Warcry\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Draw !M! card. NL Place a card from your hand on top of your draw pile. NL Exhaust.\", \"Draw !M! cards. NL Place a card from your hand on top of your draw pile. NL Exhaust.\"]\r\n    },\r\n    \"Whirlwind\": {\r\n        \"name\": \"Whirlwind\",\r\n        \"cost\": -1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage to ALL enemies X times.\"]\r\n    },\r\n    \"Wild Strike\": {\r\n        \"name\": \"Wild Strike\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"RED\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Shuffle a Wound into your draw pile.\"]\r\n    },\r\n    \"Accuracy\": {\r\n        \"name\": \"Accuracy\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Shivs deal !M! additional damage.\"]\r\n    },\r\n    \"Acrobatics\": {\r\n        \"name\": \"Acrobatics\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Draw !M! cards. NL Discard 1 card.\"]\r\n    },\r\n    \"Adrenaline\": {\r\n        \"name\": \"Adrenaline\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Gain [G]. NL Draw 2 cards. NL Exhaust.\", \"Gain [G] [G]. NL Draw 2 cards. NL Exhaust.\"]\r\n    },\r\n    \"After Image\": {\r\n        \"name\": \"After Image\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Whenever you play a card, gain 1 Block.\", \"Innate. NL Whenever you play a card, gain 1 Block.\"]\r\n    },\r\n    \"Venomology\": {\r\n        \"name\": \"Venomology\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Obtain a random potion. NL Exhaust.\"]\r\n    },\r\n    \"All Out Attack\": {\r\n        \"name\": \"All Out Attack\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage to ALL enemies. NL Draw 1 less card next turn.\"]\r\n    },\r\n    \"A Thousand Cuts\": {\r\n        \"name\": \"A Thousand Cuts\",\r\n        \"cost\": 2,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Whenever you play a card, deal !M! damage to ALL enemies.\"]\r\n    },\r\n    \"Backflip\": {\r\n        \"name\": \"Backflip\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Draw 2 cards.\"]\r\n    },\r\n    \"Backstab\": {\r\n        \"name\": \"Backstab\",\r\n        \"cost\": 0,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Innate. NL Exhaust.\"]\r\n    },\r\n    \"Bane\": {\r\n        \"name\": \"Bane\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL If the enemy is Poisoned, deal !D! damage again.\"]\r\n    },\r\n    \"Blade Dance\": {\r\n        \"name\": \"Blade Dance\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Add !M! Shivs to your hand.\"]\r\n    },\r\n    \"Blur\": {\r\n        \"name\": \"Blur\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Block is not removed at the start of your next turn.\"]\r\n    },\r\n    \"Bouncing Flask\": {\r\n        \"name\": \"Bouncing Flask\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Apply 3 Poison to a random enemy !M! times.\"]\r\n    },\r\n    \"Bullet Time\": {\r\n        \"name\": \"Bullet Time\",\r\n        \"cost\": 3,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"You cannot draw any cards this turn. Reduce the cost of cards in your hand to 0 this turn.\"]\r\n    },\r\n    \"Burst\": {\r\n        \"name\": \"Burst\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"This turn, your next Skill is played twice.\", \"This turn, your next !M! Skills are played twice.\"]\r\n    },\r\n    \"Calculated Gamble\": {\r\n        \"name\": \"Calculated Gamble\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Discard your hand, NL then draw that many cards. NL Exhaust.\", \"Discard your hand, NL then draw that many cards.\"]\r\n    },\r\n    \"Caltrops\": {\r\n        \"name\": \"Caltrops\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Whenever you are attacked, deal !M! damage to the attacker.\"]\r\n    },\r\n    \"Catalyst\": {\r\n        \"name\": \"Catalyst\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Double an enemy's Poison. NL Exhaust.\", \"Triple an enemy's Poison. NL Exhaust.\"]\r\n    },\r\n    \"Choke\": {\r\n        \"name\": \"Choke\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Whenever you play a card this turn, targeted enemy loses !M! HP.\"]\r\n    },\r\n    \"Cloak and Dagger\": {\r\n        \"name\": \"Cloak and Dagger\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\"\r\n    },\r\n    \"Concentrate\": {\r\n        \"name\": \"Concentrate\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Discard !M! cards. NL Gain [G] [G].\"]\r\n    },\r\n    \"Corpse Explosion\": {\r\n        \"name\": \"Corpse Explosion\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Enemy loses all Poison. Deal damage equal to twice the amount lost to ALL enemies.\", \"Enemy loses all Poison. Deal damage equal to 3 times the amount lost to ALL enemies.\"]\r\n    },\r\n    \"Crippling Poison\": {\r\n        \"name\": \"Crippling Poison\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Apply !M! Poison. NL Apply !M! Weak.\"]\r\n    },\r\n    \"Dagger Spray\": {\r\n        \"name\": \"Dagger Spray\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage to ALL enemies twice.\"]\r\n    },\r\n    \"Dagger Throw\": {\r\n        \"name\": \"Dagger Throw\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Draw 1 card. NL Discard 1 card.\"]\r\n    },\r\n    \"Dash\": {\r\n        \"name\": \"Dash\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Deal !D! damage.\"]\r\n    },\r\n    \"Deadly Poison\": {\r\n        \"name\": \"Deadly Poison\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Apply !M! Poison.\"]\r\n    },\r\n    \"Defend_G\": {\r\n        \"name\": \"Defend_G\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"BASIC\",\r\n        \"descriptions\": [\"Gain !B! Block.\"]\r\n    },\r\n    \"Deflect\": {\r\n        \"name\": \"Deflect\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Gain !B! Block.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Die Die Die\": {\r\n        \"name\": \"Die Die Die\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Deal !D! damage to ALL enemies. NL Exhaust.\"]\r\n    },\r\n    \"Distraction\": {\r\n        \"name\": \"Distraction\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Add a random Skill to your hand. NL It costs 0 this turn. NL Exhaust.\"]\r\n    },\r\n    \"Dodge and Roll\": {\r\n        \"name\": \"Dodge and Roll\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Next turn gain !B! Block.\"]\r\n    },\r\n    \"Doppelganger\": {\r\n        \"name\": \"Doppelganger\",\r\n        \"cost\": -1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Next turn, draw X cards and gain X [G]. NL Exhaust.\", \"Next turn, draw X+1 cards and gain X+1 [G]. NL Exhaust.\"]\r\n    },\r\n    \"Endless Agony\": {\r\n        \"name\": \"Endless Agony\",\r\n        \"cost\": 0,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Whenever you draw this card, add a copy of it to your hand. NL Deal !D! damage. NL Exhaust.\"]\r\n    },\r\n    \"Envenom\": {\r\n        \"name\": \"Envenom\",\r\n        \"cost\": 2,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Whenever an Attack deals unblocked damage, apply 1 Poison.\"]\r\n    },\r\n    \"Escape Plan\": {\r\n        \"name\": \"Escape Plan\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Draw 1 card. NL If the card is a Skill, gain !B! Block.\"]\r\n    },\r\n    \"Eviscerate\": {\r\n        \"name\": \"Eviscerate\",\r\n        \"cost\": 4,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Costs 1 less [G] NL for each card discarded this turn. NL Deal !D! damage three times.\"]\r\n    },\r\n    \"Expertise\": {\r\n        \"name\": \"Expertise\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Draw cards until you have !M! in hand.\"]\r\n    },\r\n    \"Finisher\": {\r\n        \"name\": \"Finisher\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage for each Attack played this turn.\"]\r\n    },\r\n    \"Flechettes\": {\r\n        \"name\": \"Flechettes\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage for each Skill in your hand.\"]\r\n    },\r\n    \"Flying Knee\": {\r\n        \"name\": \"Flying Knee\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Next turn gain [G].\"]\r\n    },\r\n    \"Footwork\": {\r\n        \"name\": \"Footwork\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain !M! Dexterity.\"]\r\n    },\r\n    \"Glass Knife\": {\r\n        \"name\": \"Glass Knife\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Deal !D! damage twice. Glass Knife's damage is lowered by 2 this combat.\"]\r\n    },\r\n    \"Grand Finale\": {\r\n        \"name\": \"Grand Finale\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Can only be played if there are no cards in your draw pile. NL Deal !D! damage to ALL enemies.\", \"My draw pile NL must be #rEmpty.\"]\r\n    },\r\n    \"Heel Hook\": {\r\n        \"name\": \"Heel Hook\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL If the enemy is Weak, NL Gain [G] and NL draw 1 card.\"]\r\n    },\r\n    \"Infinite Blades\": {\r\n        \"name\": \"Infinite Blades\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"At the start of your turn, add a Shiv to your hand.\", \"Innate. NL At the start of your turn, add a Shiv to your hand.\"]\r\n    },\r\n    \"Leg Sweep\": {\r\n        \"name\": \"Leg Sweep\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Apply !M! Weak. NL Gain !B! Block.\"]\r\n    },\r\n    \"Malaise\": {\r\n        \"name\": \"Malaise\",\r\n        \"cost\": -1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Enemy loses X Strength. Apply X Weak. NL Exhaust.\", \"Enemy loses X+1 Strength. Apply X+1 Weak. NL Exhaust.\"]\r\n    },\r\n    \"Masterful Stab\": {\r\n        \"name\": \"Masterful Stab\",\r\n        \"cost\": 0,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Can only be played if there are no other cards in your hand. NL Deal !D! damage.\", \"This has to be my NL only card.\"]\r\n    },\r\n    \"Neutralize\": {\r\n        \"name\": \"Neutralize\",\r\n        \"cost\": 0,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"BASIC\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Apply !M! Weak.\"]\r\n    },\r\n    \"Night Terror\": {\r\n        \"name\": \"Night Terror\",\r\n        \"cost\": 3,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Choose a card. NL Next turn, add !M! copies of that card into your hand. Exhaust.\"]\r\n    },\r\n    \"Noxious Fumes\": {\r\n        \"name\": \"Noxious Fumes\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"At the start of your turn, apply !M! Poison to ALL enemies.\"]\r\n    },\r\n    \"Outmaneuver\": {\r\n        \"name\": \"Outmaneuver\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Next turn NL gain [G] [G].\", \"Next turn NL gain [G] [G] [G].\"]\r\n    },\r\n    \"Phantasmal Killer\": {\r\n        \"name\": \"Phantasmal Killer\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"On your next turn, your Attack damage is doubled.\"]\r\n    },\r\n    \"PiercingWail\": {\r\n        \"name\": \"PiercingWail\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"ALL enemies lose !M! Strength for 1 turn. NL Exhaust.\"]\r\n    },\r\n    \"Poisoned Stab\": {\r\n        \"name\": \"Poisoned Stab\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Apply !M! Poison.\"]\r\n    },\r\n    \"Predator\": {\r\n        \"name\": \"Predator\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Draw 2 more cards next turn.\"]\r\n    },\r\n    \"Prepared\": {\r\n        \"name\": \"Prepared\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Draw !M! card. NL Discard !M! card.\", \"Draw !M! cards. NL Discard !M! cards.\"]\r\n    },\r\n    \"Quick Slash\": {\r\n        \"name\": \"Quick Slash\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Draw 1 card.\"]\r\n    },\r\n    \"Reflex\": {\r\n        \"name\": \"Reflex\",\r\n        \"cost\": -2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Unplayable. NL If this card is discarded from your hand, draw !M! card.\", \"Unplayable. NL If this card is discarded from your hand, draw !M! cards.\"]\r\n    },\r\n    \"Riddle With Holes\": {\r\n        \"name\": \"Riddle With Holes\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage 5 times.\"]\r\n    },\r\n    \"Setup\": {\r\n        \"name\": \"Setup\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Place a card from your hand on top of your draw pile. NL It costs 0 until it is played.\"]\r\n    },\r\n    \"Skewer\": {\r\n        \"name\": \"Skewer\",\r\n        \"cost\": -1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage X times.\"]\r\n    },\r\n    \"Slice\": {\r\n        \"name\": \"Slice\",\r\n        \"cost\": 0,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage.\"]\r\n    },\r\n    \"Storm of Steel\": {\r\n        \"name\": \"Storm of Steel\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Discard your hand. NL Add 1 Shiv to your hand for each card discarded.\", \"Discard your hand. NL Add 1 upgraded Shiv to your hand for each card discarded.\"]\r\n    },\r\n    \"Strike_G\": {\r\n        \"name\": \"Strike_G\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"BASIC\",\r\n        \"descriptions\": [\"Deal !D! damage.\"]\r\n    },\r\n    \"Sucker Punch\": {\r\n        \"name\": \"Sucker Punch\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Apply !M! Weak.\"]\r\n    },\r\n    \"Survivor\": {\r\n        \"name\": \"Survivor\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"BASIC\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Discard a card.\"]\r\n    },\r\n    \"Tactician\": {\r\n        \"name\": \"Tactician\",\r\n        \"cost\": -2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Unplayable. NL If this card is discarded from your hand, gain [G].\", \"Unplayable. NL If this card is discarded from your hand, gain [G] [G].\"]\r\n    },\r\n    \"Terror\": {\r\n        \"name\": \"Terror\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Apply 99 Vulnerable. NL Exhaust.\"]\r\n    },\r\n    \"Tools of the Trade\": {\r\n        \"name\": \"Tools of the Trade\",\r\n        \"cost\": 1,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"At the start of your turn, draw 1 card and discard 1 card.\"]\r\n    },\r\n    \"Underhanded Strike\": {\r\n        \"name\": \"Underhanded Strike\",\r\n        \"cost\": 2,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL If you have discarded a card this turn, NL gain [G] [G].\"]\r\n    },\r\n    \"Unload\": {\r\n        \"name\": \"Unload\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Discard ALL non-Attack cards.\"]\r\n    },\r\n    \"Well Laid Plans\": {\r\n        \"name\": \"Well Laid Plans\",\r\n        \"cost\": 0,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"At the end of your turn, Retain up to !M! card.\", \"At the end of your turn, Retain up to !M! cards.\"]\r\n    },\r\n    \"Wraith Form\": {\r\n        \"name\": \"Wraith Form\",\r\n        \"cost\": 3,\r\n        \"type\": \"POWER\",\r\n        \"color\": \"GREEN\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Whenever you play a Skill, deal !M! damage to a random enemy.\"]\r\n    },\r\n    \"Defend_B\": {\r\n        \"name\": \"Defend_B\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"BLUE\",\r\n        \"rarity\": \"BASIC\",\r\n        \"descriptions\": [\"Gain !B! Block.\"]\r\n    },\r\n    \"Apotheosis\": {\r\n        \"name\": \"Apotheosis\",\r\n        \"cost\": 2,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Upgrade ALL of your cards for the rest of combat. NL Exhaust.\"]\r\n    },\r\n    \"Bandage Up\": {\r\n        \"name\": \"Bandage Up\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Heal !M! HP. NL Exhaust.\"]\r\n    },\r\n    \"Bite\": {\r\n        \"name\": \"Bite\",\r\n        \"cost\": 1,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"SPECIAL\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Heal !M! HP.\"]\r\n    },\r\n    \"Blind\": {\r\n        \"name\": \"Blind\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Apply !M! Weak.\", \"Apply !M! Weak to ALL enemies.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Dark Shackles\": {\r\n        \"name\": \"Dark Shackles\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Enemy loses !M! Strength for the rest of this turn. NL Exhaust.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Deep Breath\": {\r\n        \"name\": \"Deep Breath\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Shuffle your discard pile into your draw pile. NL Draw !M! card.\", \"Shuffle your discard pile into your draw pile. NL Draw !M! cards.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Dramatic Entrance\": {\r\n        \"name\": \"Dramatic Entrance\",\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Innate. NL Deal !D! damage to ALL enemies. NL Exhaust.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Enlightenment\": {\r\n        \"name\": \"Enlightenment\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Reduce the cost of cards in your hand to 1 this turn.\", \"Reduce the cost of cards in your hand to 1 this combat.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Finesse\": {\r\n        \"name\": \"Finesse\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain !B! Block. NL Draw 1 card.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Flash of Steel\": {\r\n        \"name\": \"Flash of Steel\",\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Draw 1 card.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Good Instincts\": {\r\n        \"name\": \"Good Instincts\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain !B! Block.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Jack Of All Trades\": {\r\n        \"name\": \"Jack Of All Trades\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Add !M! random colorless card to your hand. NL Exhaust.\", \"Add !M! random colorless cards to your hand. NL Exhaust.\"]\r\n    },\r\n    \"J.A.X.\": {\r\n        \"name\": \"J.A.X.\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"SPECIAL\",\r\n        \"descriptions\": [\"Lose 3 HP. NL Gain !M! Strength . NL Exhaust.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Madness\": {\r\n        \"name\": \"Madness\",\r\n        \"cost\": 1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"A random card in your hand costs 0 for the rest of combat. NL Exhaust.\"]\r\n    },\r\n    \"Master of Strategy\": {\r\n        \"name\": \"Master of Strategy\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Draw !M! cards. NL Exhaust.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Mind Blast\": {\r\n        \"name\": \"Mind Blast\",\r\n        \"cost\": 0,\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal damage equal to the number of cards in your draw pile.\", \"Innate. NL Deal damage equal to the number of cards in your draw pile.\"]\r\n    },\r\n    \"Panacea\": {\r\n        \"name\": \"Panacea\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Gain !M! Artifact. NL Exhaust.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Panache\": {\r\n        \"name\": \"Panache\",\r\n        \"type\": \"POWER\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Every time you play 5 cards in a single turn, deal !M! damage to ALL enemies.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Purity\": {\r\n        \"name\": \"Purity\",\r\n        \"cost\": 0,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Choose and Exhaust up to !M! cards in your hand. NL Exhaust.\"]\r\n    },\r\n    \"Sadistic Nature\": {\r\n        \"name\": \"Sadistic Nature\",\r\n        \"type\": \"POWER\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Whenever you apply a Debuff to an enemy, they take !M! damage.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Secret Technique\": {\r\n        \"name\": \"Secret Technique\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Choose a Skill from your draw pile and place it into your hand. NL Exhaust.\", \"Choose a Skill from your draw pile and place it into your hand.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Secret Weapon\": {\r\n        \"name\": \"Secret Weapon\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Choose an Attack from your draw pile and place it into your hand. NL Exhaust.\", \"Choose an Attack from your draw pile and place it into your hand.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Shiv\": {\r\n        \"name\": \"Shiv\",\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"SPECIAL\",\r\n        \"descriptions\": [\"Deal !D! damage. NL Exhaust.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Swift Strike\": {\r\n        \"name\": \"Swift Strike\",\r\n        \"type\": \"ATTACK\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Deal !D! damage.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Thinking Ahead\": {\r\n        \"name\": \"Thinking Ahead\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Draw 2 cards. NL Put a card from your hand on top of your draw pile. NL Exhaust.\", \"Draw 2 cards. NL Put a card from your hand on top of your draw pile.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Transmutation\": {\r\n        \"name\": \"Transmutation\",\r\n        \"cost\": -1,\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"RARE\",\r\n        \"descriptions\": [\"Add X random colorless cards into your hand. NL Exhaust.\", \"Add X random upgraded colorless cards into your hand. NL Exhaust.\"]\r\n    },\r\n    \"Trip\": {\r\n        \"name\": \"Trip\",\r\n        \"type\": \"SKILL\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"UNCOMMON\",\r\n        \"descriptions\": [\"Apply !M! Vulnerable.\", \"Apply !M! Vulnerable to ALL enemies.\"],\r\n        \"cost\": 0\r\n    },\r\n    \"Burn\": {\r\n        \"name\": \"Burn\",\r\n        \"cost\": -2,\r\n        \"type\": \"STATUS\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Unplayable. NL At the end of your turn, take 2 damage.\", \"Unplayable. NL At the end of your turn, take 4 damage.\"]\r\n    },\r\n    \"Dazed\": {\r\n        \"name\": \"Dazed\",\r\n        \"cost\": -2,\r\n        \"type\": \"STATUS\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Unplayable. NL Ethereal.\"]\r\n    },\r\n    \"Wound\": {\r\n        \"name\": \"Wound\",\r\n        \"cost\": -2,\r\n        \"type\": \"STATUS\",\r\n        \"color\": \"COLORLESS\",\r\n        \"rarity\": \"COMMON\",\r\n        \"descriptions\": [\"Unplayable.\"]\r\n    },\r\n    \"Clumsy\": {\r\n        \"name\": \"Clumsy\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"CURSE\",\r\n        \"descriptions\": [\"Unplayable. NL Ethereal.\"]\r\n    },\r\n    \"Decay\": {\r\n        \"name\": \"Decay\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"CURSE\",\r\n        \"descriptions\": [\"Unplayable. NL At the end of your turn, take 2 damage.\"]\r\n    },\r\n    \"Doubt\": {\r\n        \"name\": \"Doubt\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"CURSE\",\r\n        \"descriptions\": [\"Unplayable. NL At the end of your turn, gain 1 Weak.\"]\r\n    },\r\n    \"Injury\": {\r\n        \"name\": \"Injury\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"CURSE\",\r\n        \"descriptions\": [\"Unplayable.\"]\r\n    },\r\n    \"Necronomicurse\": {\r\n        \"name\": \"Necronomicurse\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"SPECIAL\",\r\n        \"descriptions\": [\"Unplayable. NL There is no escape from this Curse.\"]\r\n    },\r\n    \"Normality\": {\r\n        \"name\": \"Normality\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"CURSE\",\r\n        \"descriptions\": [\"Unplayable. NL You cannot play more than 3 cards this turn.\"]\r\n    },\r\n    \"Pain\": {\r\n        \"name\": \"Pain\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"CURSE\",\r\n        \"descriptions\": [\"Unplayable. NL While in hand, NL lose 1 HP when other cards are played.\"]\r\n    },\r\n    \"Parasite\": {\r\n        \"name\": \"Parasite\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"CURSE\",\r\n        \"descriptions\": [\"Unplayable. NL If transformed or removed from your deck, lose 3 Max HP\"]\r\n    },\r\n    \"Regret\": {\r\n        \"name\": \"Regret\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"CURSE\",\r\n        \"descriptions\": [\"Unplayable. NL At the end of your turn, lose 1 HP for each card in your hand.\"]\r\n    },\r\n    \"Writhe\": {\r\n        \"name\": \"Writhe\",\r\n        \"cost\": -2,\r\n        \"type\": \"CURSE\",\r\n        \"color\": \"CURSE\",\r\n        \"rarity\": \"CURSE\",\r\n        \"descriptions\": [\"Unplayable. NL Innate.\"]\r\n    }\r\n}`;\r\n\r\ncards = JSON.parse(cards);\r\n\r\nexport default cards;\r\n","import React, { Component } from 'react';\r\nimport styles from '../styles/Potions.module.css'\r\n\r\nclass Item extends Component {\r\n\r\n    state = {hover: false};\r\n\r\n    toggleHover = () => {\r\n        this.setState({hover: !this.state.hover});\r\n    };\r\n\r\n    createStyle() {\r\n        let commonStyle = {\r\n            textAlign: 'center',\r\n            minHeight: '40px',\r\n            boxSizing: 'border-box',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            display: 'flex',\r\n            cursor: 'default'\r\n        };\r\n\r\n        let specificStyle;\r\n        if (this.props.type === 'RelicItem' || this.props.type === 'CardItem') {\r\n            specificStyle = {\r\n                backgroundColor: this.state.hover ? '#17bebb' : '#27cecb',\r\n                border: '1px solid #17bebb'\r\n            };\r\n        } else if (this.props.type === 'Relic') {\r\n            specificStyle = {\r\n                backgroundColor: this.state.hover ? '#46d38f' : '#56e39f',\r\n                border: '1px solid #46d38f'\r\n            };\r\n        } else if (this.props.type === 'Card') {\r\n            specificStyle = {\r\n                backgroundColor: this.state.hover ? '#df2e26' : '#ef3e36',\r\n                border: '1px solid #df2e26'\r\n            };\r\n        } else if (this.props.type === 'Potion') {\r\n            specificStyle = {\r\n                backgroundColor: this.state.hover ? '#C4E717' : '#D7EE62',\r\n                border: '1px solid #C4E717'\r\n            };\r\n        }\r\n\r\n        if (this.props.bottled === true) {\r\n            specificStyle.border = '3px solid #ffd700';\r\n        }\r\n\r\n        return {\r\n            ...commonStyle, \r\n            ...specificStyle, \r\n            ...this.props.style\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const style = this.createStyle();\r\n\r\n        if (this.props.type === 'Potion') {\r\n            if (this.props.active) {\r\n                style.border = \"2px solid red\"\r\n            }\r\n\r\n            let key = `potion-${this.props.isPlaceholder ? \"placeholder\" : this.props.name.split(\" \")[0].toLowerCase()}`\r\n\r\n            return (\r\n                <div id={this.props.id} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={this.props.onClick} style={style}>\r\n                    <div className={typeof styles[key] === \"undefined\" ? styles.potion_placeholder : styles[key]}></div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={this.props.onClick} style={style}>\r\n                {this.props.name}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nclass Search extends Component { \r\n    render() {\r\n        const styles = {\r\n            searchbox: {\r\n                height: '40px',\r\n                width: '100%',\r\n                fontSize: '18px'\r\n            }\r\n        }\r\n        return <input onChange={event => this.props.onSearchTermChanged(event.target.value)} placeholder=\"Search\" style={styles.searchbox}/>\r\n    }\r\n}\r\n\r\n\r\nexport default Search;\r\n","import React, {Component} from \"react\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport cards from \"./CardsJSON\";\r\nimport Item from \"./Item\";\r\nimport Search from './Search';\r\nimport { actions } from \"../utils/ReduxStore\"\r\nimport MultiSelect from \"@saltyeyes/react-multi-select\"\r\n\r\nconst filterOptions = {\r\n    rarity: {\r\n        BASIC:    \"Basic\",\r\n        COMMON:   \"Common\",\r\n        UNCOMMON: \"Uncommon\",\r\n        RARE:     \"Rare\",\r\n        SPECIAL:  \"Special\",\r\n        CURSE:    \"Curse\"\r\n    },\r\n    color:  {\r\n        RED:       \"Red\",\r\n        BLUE:      \"Blue\",\r\n        GREEN:     \"Green\",\r\n        COLORLESS: \"Colorless\",\r\n        CURSE:     \"Curse\"\r\n    },\r\n    cost:   {\r\n        \"-2\": \"Unplayable\",\r\n        \"-1\": \"X\",\r\n        \" 0\": \"0\",\r\n        \" 1\": \"1\",\r\n        \" 2\": \"2\",\r\n        \" 3\": \"3\",\r\n        \" 4\": \"4\"\r\n    },\r\n    type:   {\r\n        ATTACK: \"Attack\",\r\n        POWER:  \"Power\",\r\n        SKILL:  \"Skill\",\r\n        STATUS: \"Status\",\r\n        CURSE:  \"Curse\"\r\n    }\r\n}\r\n\r\nclass CardSelector extends Component {\r\n\r\n    state = {\r\n        upgraded: false,\r\n        searchTerm: '',\r\n        filters: {}\r\n    }\r\n\r\n    sortedCards = Object.keys(cards).sort();\r\n\r\n    onSearchTermChanged = (searchTerm) => {\r\n        this.setState({searchTerm});\r\n    };\r\n\r\n    toggleCheckbox = () => {\r\n        this.setState({upgraded: !this.state.upgraded});\r\n    };\r\n\r\n    addCard(card) {\r\n        this.props.actions.addCard({\r\n            upgrades: this.state.upgraded ? 1 : 0, \r\n            id: card\r\n        });\r\n    }\r\n\r\n    onFiltersChanged(property, options) {\r\n        let filters = {\r\n            ...this.state.filters,\r\n            [property]: options\r\n        }\r\n        this.setState({filters: filters}) \r\n    }\r\n\r\n    filterCard(cardName, filters=null) {\r\n        filters = filters || this.state.filters\r\n        let card = cards[cardName]\r\n        for (let [property, options] of Object.entries(filters)) {\r\n            options = options.map((option) => {return option.trim()})\r\n            if (options.length > 0 && !options.includes(String(card[property]))) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    render() {\r\n\r\n        const styles = {\r\n          cards: {\r\n              display: 'grid',\r\n              boxSizing: 'border-box',\r\n              overflowY: 'scroll',\r\n              height: 'calc(100vh - 166px)',  //TODO: Fix this line\r\n              alignContent: 'start'\r\n          },\r\n            upgrade: {\r\n                height: '1.5rem',\r\n                backgroundColor: '#d8d8d8',\r\n                border: '1px solid',\r\n                boxSizing: 'border-box',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            },\r\n            filters: {\r\n                display: 'grid',\r\n                boxSizing: 'border-box',\r\n                gridRow: 1,\r\n                gridTemplateColumns: '25% 25% 25% 25%'\r\n            }\r\n        };\r\n\r\n        const cardsList = this.sortedCards\r\n            .filter(card => card.toLowerCase().startsWith(this.state.searchTerm.trim()))\r\n            .filter(card => this.filterCard(card))\r\n            .map((card) => <Item type=\"CardItem\" onClick={() => this.addCard(card)} name={card + (this.state.upgraded ? '+' : '')} key={card}/>)\r\n\r\n        return (\r\n            <div>\r\n                <Search onSearchTermChanged={this.onSearchTermChanged}/>\r\n                <div style={styles.filters}>\r\n                    {Object.entries(filterOptions).map(([name, options]) => {\r\n                        return <CardFilter key={name} options={options} name={name} onFiltersChanged={this.onFiltersChanged.bind(this)} />\r\n                    })}\r\n                </div>\r\n                <div style={styles.upgrade}>\r\n                    <input onChange={this.toggleCheckbox} type='checkbox' value={this.state.upgraded}/><label>upgraded</label>\r\n                </div>\r\n                <div style={styles.cards}>\r\n                    {cardsList}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CardFilter extends Component {\r\n    state = {\r\n        selected: [],\r\n    };\r\n\r\n    valueRenderer(selected, options) {\r\n        let output;\r\n        if (selected.length === 0) {\r\n            output = \"None\"\r\n        } else if (selected.length === 1) {\r\n            for (let option of options) {\r\n                if (option.value === selected[0]) {\r\n                    output = option.label\r\n                    break;\r\n                }\r\n            }\r\n        } else if (selected.length === options.length) {\r\n            output = \"All\"\r\n        } else {\r\n            output = `${selected.length} options`\r\n        }\r\n        return <span><strong>{this.props.name[0].toUpperCase() + this.props.name.substring(1)}</strong>: {output}</span>\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({selected: Object.keys(this.props.options)})\r\n    }\r\n\r\n    handleSelectedChanged(selected) {\r\n        this.setState({selected})\r\n        this.props.onFiltersChanged(this.props.name, selected);\r\n    }\r\n\r\n    render() {\r\n        const {selected} = this.state;\r\n        const options = Object.entries(this.props.options).map(([value, label]) => ({\r\n            value: value,\r\n            label: label\r\n        }));\r\n        return <MultiSelect\r\n                options={options}\r\n                onSelectedChanged={this.handleSelectedChanged.bind(this)}\r\n                selected={selected}\r\n                valueRenderer={this.valueRenderer.bind(this)}\r\n                disableSearch={true}\r\n            />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CardSelector);\r\n","let relics = `{\r\n  \"Anchor\": {\r\n\t\"NAME\": \"Anchor\",\r\n\t\"FLAVOR\": \"Holding this miniature trinket, you feel heavier and more stable.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Start each combat with #b\", \r\n\t\" #yBlock.\" \r\n\t]\r\n  },\r\n  \"Art of War\": {\r\n\t\"NAME\": \"Art of War\",\r\n\t\"FLAVOR\": \"This ancient manuscript contains wisdom from a past age.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"If you do not play any #yAttacks during your turn, gain an extra \",\r\n\t\"[R] next turn.\", \r\n\t\"[G] next turn.\", \r\n\t\"[B] next turn.\"\r\n\t]\r\n  },\r\n  \"Astrolabe\": {\r\n\t\"NAME\": \"Astrolabe\",\r\n\t\"FLAVOR\": \"A tool to glean invaluable knowledge from the stars.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pickup, choose and #yTransform #b3 cards, then #yUpgrade them.\",\r\n\t\"Choose 3 cards for \"\r\n\t]\r\n  },\r\n  \"Bag of Marbles\": {\r\n\t\"NAME\": \"Bag of Marbles\",\r\n\t\"FLAVOR\": \"A once popular toy in the City. Useful for throwing enemies off balance.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, apply #b\",\r\n\t\" #yVulnerable to ALL enemies.\"\r\n\t]\r\n  },\r\n  \"Bag of Preparation\": {\r\n\t\"NAME\": \"Bag of Preparation\",\r\n\t\"FLAVOR\": \"Oversized adventurer's pack. Has many pockets and straps.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, draw #b\", \r\n\t\" additional cards.\"\r\n\t]\r\n  },\r\n  \"Bird Faced Urn\": {\r\n\t\"NAME\": \"Bird-Faced Urn\",\r\n\t\"FLAVOR\": \"This urn shows the crow god Mazaleth looking mischievous.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you play a #yPower, heal #b\", \r\n\t\" HP.\"\r\n\t]\r\n  },\r\n  \"Black Blood\": {\r\n\t\"NAME\": \"Black Blood\",\r\n\t\"FLAVOR\": \"The rage grows darker.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Replaces #rBurning #rBlood. At the end of combat, heal #b\", \r\n\t\" HP.\"\r\n\t]\r\n  },\r\n  \"Black Star\": {\r\n\t\"NAME\": \"Black Star\",\r\n\t\"FLAVOR\": \"Originally discovered in the town of the serpent, aside a solitary candle.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"#yElites now drop #b2 #yRelics when defeated.\"\r\n\t]\r\n  },\r\n  \"Blood Vial\": {\r\n\t\"NAME\": \"Blood Vial\",\r\n\t\"FLAVOR\": \"A vial containing the blood of a pure and elder vampire.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, heal #b\", \r\n\t\" HP.\"\r\n\t]\r\n  },\r\n  \"Bloody Idol\": {\r\n\t\"NAME\": \"Bloody Idol\",\r\n\t\"FLAVOR\": \"The idol now weeps a constant stream of blood.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you gain #yGold, heal #b\", \r\n\t\" HP.\"\r\n\t]\r\n  },\r\n  \"Blue Candle\": {\r\n\t\"NAME\": \"Blue Candle\",\r\n\t\"FLAVOR\": \"The flame ignites when shrouded in darkness.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"#yCurse cards can now be played. NL NL Playing a #yCurse will make you lose #b\",\r\n\t\" HP and #yExhausts the card.\"\r\n\t]\r\n  },\r\n  \"Bottled Flame\": {\r\n\t\"NAME\": \"Bottled Flame\",\r\n\t\"FLAVOR\": \"Inside the bottle resides a flame that eternally burns.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pick up, choose an Attack card. At the start of each combat, this card will be in your hand.\",\r\n\t\"Choose a card for \",\r\n\t\"At the start of each combat, add \",\r\n\t\" to your hand.\"\r\n\t]\r\n  },\r\n  \"Bottled Lightning\": {\r\n\t\"NAME\": \"Bottled Lightning\",\r\n\t\"FLAVOR\": \"Peering into the swirling maelstrom, you see a part of yourself staring back.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pick up, choose a Skill card. At the start of each combat, this card will be in your hand.\",\r\n\t\"Choose a card for \",\r\n\t\"At the start of each combat, add \",\r\n\t\" to your hand.\"\r\n\t]\r\n  },\r\n  \"Bottled Tornado\": {\r\n\t\"NAME\": \"Bottled Tornado\",\r\n\t\"FLAVOR\": \"Test relic.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pick up, choose a Power card. At the start of each combat, this card will be in your hand.\",\r\n\t\"Choose a card for \",\r\n\t\"At the start of each combat, add \",\r\n\t\" to your hand.\"\r\n\t]\r\n  },\r\n  \"Bronze Scales\": {\r\n\t\"NAME\": \"Bronze Scales\",\r\n\t\"FLAVOR\": \"The sharp scales of the Guardian. Rearranges itself to protect its user. \",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you take damage, deal #b\", \r\n\t\" damage back.\"\r\n\t]\r\n  },\r\n  \"Burning Blood\": {\r\n\t\"NAME\": \"Burning Blood\",\r\n\t\"FLAVOR\": \"Your body's own blood burns with an undying rage.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the end of combat, heal #b\", \r\n\t\" HP.\"\r\n\t]\r\n  },\r\n  \"Calipers\": {\r\n\t\"NAME\": \"Calipers\",\r\n\t\"FLAVOR\": \"\\\\\"Mechanical precision leads to greatness\\\\\" - The Architect\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of your turn, lose #b\",\r\n\t\" #yBlock rather than all of your #yBlock.\"\r\n\t]\r\n  },\r\n  \"Calling Bell\": {\r\n\t\"NAME\": \"Calling Bell\",\r\n\t\"FLAVOR\": \"This dark iron bell rang 3 times when you found it, but now stays silent.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Obtain #b3 #rCurses and #b3 #yRelics.\",\r\n\t\"The Bell Tolls...\",\r\n\t\"Skip Rewards\",\r\n\t\"Close\"\r\n\t]\r\n  },\r\n  \"Cauldron\": {\r\n\t\"NAME\": \"Cauldron\",\r\n\t\"FLAVOR\": \"The Merchant is actually a rather skilled potion brewer. Buy 4 get 1 free.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"When obtained, brews #b5 random potions.\",\r\n\t\"Blup blip bloop...!\"\t\r\n\t]\r\n  },\r\n  \"Centennial Puzzle\": {\r\n\t\"NAME\": \"Centennial Puzzle\",\r\n\t\"FLAVOR\": \"Upon solving the puzzle you feel a powerful warmth in your chest.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"The first time you lose HP each combat, draw #b\", \r\n\t\" cards.\"\r\n\t]\r\n  },\r\n  \"Chameleon Ring\": {\r\n\t\"NAME\": \"Chameleon Ring\",\r\n\t\"FLAVOR\": \"Deprecated\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"You can now #yBrew at Rest Sites.\"\r\n\t]\r\n  },\r\n  \"Champion Belt\": {\r\n\t\"NAME\": \"Champion Belt\",\r\n\t\"FLAVOR\": \"Only the greatest may wear this belt.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you apply #yVulnerable, also apply #b\", \r\n\t\" #yWeak.\"\r\n\t]\r\n  },\r\n  \"Charon's Ashes\": {\r\n\t\"NAME\": \"Charon's Ashes\",\r\n\t\"FLAVOR\": \"Charon was said to be the god of rebirth, eternally dying and reviving in a burst of flame.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you #yExhaust a card, deal #b\", \r\n\t\" damage to ALL enemies.\"\r\n\t]\r\n  },\r\n  \"Chemical X\": {\r\n\t\"NAME\": \"Chemical X\",\r\n\t\"FLAVOR\": \"WARNING: Do not combine with sugar, spice, and everything nice.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you play a cost #bX card, its effects are increased by #b\"\r\n\t]\r\n  },\r\n  \"Circlet\": {\r\n\t\"NAME\": \"Circlet\",\r\n\t\"FLAVOR\": \"You ran out of relics to find. Impressive!\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Looks pretty.\"\r\n\t]\r\n  },\r\n  \"The Courier\": {\r\n\t\"NAME\": \"The Courier\",\r\n\t\"FLAVOR\": \"The merchant's personal pet!\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"The merchant no longer runs out of cards, relics, or potions and his prices are reduced by #b20%.\"\r\n\t]\r\n  },\r\n  \"Cursed Key\": {\r\n\t\"NAME\": \"Cursed Key\",\r\n\t\"FLAVOR\": \"You can feel the malicious energy emanating from the key. Power comes at a price.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\" Whenever you open a non-boss chest, obtain a #rCurse.\",\r\n\t\"Gain [R] at the start of each turn.\",\r\n\t\"Gain [G] at the start of each turn.\",\r\n\t\"Gain [B] at the start of each turn.\"\r\n\t]\r\n  },\r\n  \"Dead Branch\": {\r\n\t\"NAME\": \"Dead Branch\",\r\n\t\"FLAVOR\": \"The branch of a tree from a forgotten era.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you #yExhaust a card, add a random card to your hand.\"\r\n\t]\r\n  },\r\n  \"Discerning Monocle\": {\r\n\t\"NAME\": \"Discerning Monocle\",\r\n\t\"FLAVOR\": \"A very dapper looking monocle indeed.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Merchant prices are reduced by #b20%\"\r\n\t]\r\n  },\r\n  \"Dodecahedron\": {\r\n\t\"NAME\": \"Runic Dodecahedron\",\r\n\t\"FLAVOR\": \"The runes are indecipherable.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"If your HP is full, gain \",\r\n\t\"[R] at the start of each turn.\",\r\n\t\"[G] at the start of each turn.\",\r\n\t\"[B] at the start of each turn.\"\r\n\t]\r\n  },\r\n  \"Dream Catcher\": {\r\n\t\"NAME\": \"Dream Catcher\",\r\n\t\"FLAVOR\": \"The northern tribes would often use dream catchers at night, believing they led to self improvement.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you rest, you may add a card to your deck.\"\r\n\t]\r\n  },\r\n  \"Du-Vu Doll\": {\r\n\t\"NAME\": \"Du-Vu Doll\",\r\n\t\"FLAVOR\": \"A doll devised to gain strength from malicious energy.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"For each #yCurse in your deck, start each combat with #b\",\r\n\t\" additional #yStrength.\", \r\n\t\" You have no #yCurses.\", \r\n\t\" You have #b\", \r\n\t\" #yCurses.\"\r\n\t]\r\n  },\r\n  \"Ectoplasm\": {\r\n\t\"NAME\": \"Ectoplasm\",\r\n\t\"FLAVOR\": \"This blob of slime and energy seems to pulse with life.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\" You can no longer gain #yGold.\",\r\n\t\"Gain [R] at the start of each turn.\", \r\n\t\"Gain [G] at the start of each turn.\",\r\n\t\"Gain [B] at the start of each turn.\"\r\n\t]\r\n  },\r\n  \"Frozen Egg 2\": {\r\n\t\"NAME\": \"Frozen Egg\",\r\n\t\"FLAVOR\": \"The egg lies inert and frozen, never to hatch.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you add a #yPower card to your deck, it is #yUpgraded.\"\r\n\t]\r\n  },\r\n  \"Molten Egg 2\": {\r\n\t\"NAME\": \"Molten Egg\",\r\n\t\"FLAVOR\": \"The egg of a Phoenix. It glows red hot with a simmering lava.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you add an #yAttack card to your deck, it is #yUpgraded.\"\r\n\t]\r\n  },\r\n  \"Toxic Egg 2\": {\r\n\t\"NAME\": \"Toxic Egg\",\r\n\t\"FLAVOR\": \"\\\\\"What a marvelous discovery! This appears to be the inert egg of some magical creature. Who or what created this?\\\\\" - Ranwid\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you add a #ySkill card to your deck, it is #yUpgraded.\"\r\n\t]\r\n  },\r\n  \"Enchiridion\": {\r\n\t\"NAME\": \"Enchiridion\",\r\n\t\"FLAVOR\": \"The legendary journal of an ancient lich.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, add a random #yPower card to your hand. It costs #b0 until the end of turn.\"\r\n\t]\r\n  },\r\n  \"Eternal Feather\": {\r\n\t\"NAME\": \"Eternal Feather\",\r\n\t\"FLAVOR\": \"This feather appears to be completely indestructible. What bird does this possibly come from? \",\r\n    \"DESCRIPTIONS\": [\r\n\t\"For every #b\", \r\n\t\" cards in your deck, heal #b\",\r\n\t\" HP whenever you enter a Rest Site.\" \r\n\t]\r\n  },\r\n  \"Frozen Egg\": {\r\n\t\"NAME\": \"Frozen Egg\",\r\n\t\"FLAVOR\": \"The egg lies inert and frozen, never to hatch.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pick up, choose and #yUpgrade a #yPower.\",\r\n\t\"Choose a card for \"\r\n\t]\r\n  },\r\n  \"Gambling Chip\": {\r\n\t\"NAME\": \"Gambling Chip\",\r\n\t\"FLAVOR\": \"You can see a small inscription on one side. It reads: \\\\\"Bear's Lucky Chip!\\\\\"\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, discard any number of cards then draw that many.\"\r\n\t]\r\n  },\r\n  \"Ginger\": {\r\n\t\"NAME\": \"Ginger\",\r\n\t\"FLAVOR\": \"A potent tool in many tonics.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"You can no longer become #yWeakened.\"\r\n\t]\r\n  },\r\n  \"Girya\": {\r\n\t\"NAME\": \"Girya\",\r\n\t\"FLAVOR\": \"This Girya is unfathomably heavy. You could train with this to get significantly stronger.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"You can now gain #yStrength at Rest Sites. (3 times max)\"\r\n\t]\r\n  },\r\n  \"Golden Idol\": {\r\n\t\"NAME\": \"Golden Idol\",\r\n\t\"FLAVOR\": \"Made of solid gold, you feel richer just holding it.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Enemies drop #b25% more #yGold.\"\r\n\t]\r\n  },\r\n  \"Gremlin Horn\": {\r\n\t\"NAME\": \"Gremlin Horn\",\r\n\t\"FLAVOR\": \"\\\\\"Gremlin Nobs are capable of growing until the day they die. Remarkable.\\\\\" - Ranwid\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever an enemy dies, gain \", \r\n\t\"[R] and draw #b1 card.\",\r\n\t\"[G] and draw #b1 card.\", \r\n\t\"[B] and draw #b1 card.\"\r\n\t]\r\n  },\r\n  \"Happy Flower\": {\r\n\t\"NAME\": \"Happy Flower\",\r\n\t\"FLAVOR\": \"This unceasingly joyous plant is a popular novelty item among nobles.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Every #b\", \r\n\t\" turns, gain [R] .\",\r\n\t\" turns, gain [G] .\",\r\n\t\" turns, gain [B] .\"\r\n\t]\r\n  },\r\n  \"Ice Cream\": {\r\n\t\"NAME\": \"Ice Cream\",\r\n\t\"FLAVOR\": \"\\\\\"Delicious!\\\\\"\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Energy is now conserved between turns.\"\r\n\t]\r\n  },\r\n  \"Juzu Bracelet\": {\r\n\t\"NAME\": \"Juzu Bracelet\",\r\n\t\"FLAVOR\": \"A ward against the unknown.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Regular enemy combats are no longer encountered in #y? rooms.\"\r\n\t]\r\n  },\r\n  \"Kunai\": {\r\n\t\"NAME\": \"Kunai\",\r\n\t\"FLAVOR\": \"A blade favored by assassins for its lethality at range.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Every time you play #b\", \r\n\t\" #yAttacks in a single turn, gain #b\",\r\n\t\" #yDexterity.\"\r\n\t]\r\n  },\r\n  \"Lantern\": {\r\n\t\"NAME\": \"Lantern\",\r\n\t\"FLAVOR\": \"An eerie lantern which illuminates only for the wielder.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Gain \", \r\n\t\"[R] \", \r\n\t\"[G] \", \r\n\t\"[B] \",\r\n\t\"on the first turn of each combat.\"\r\n\t]\r\n  },\r\n  \"Letter Opener\": {\r\n\t\"NAME\": \"Letter Opener\",\r\n\t\"FLAVOR\": \"Unnaturally sharp.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Every time you play #b3 Skills in a single turn, deal #b\",\r\n\t\" damage to ALL enemies.\"\r\n\t]\r\n  },\r\n  \"Living Blade\": {\r\n\t\"NAME\": \"Living Blade\",\r\n\t\"FLAVOR\": \"DEPRECATED\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"You can get any number of any card.\"\r\n\t]\r\n  },\r\n  \"Lizard Tail\": {\r\n\t\"NAME\": \"Lizard Tail\",\r\n\t\"FLAVOR\": \"A fake tail to trick enemies during combat.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"When you would die, heal to #b50% of your Max HP instead (works once).\"\r\n\t]\r\n  },\r\n  \"Magic Flower\": {\r\n\t\"NAME\": \"Magic Flower\",\r\n\t\"FLAVOR\": \"A flower long thought extinct, somehow preserved in perfect condition.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Healing is #b50% more effective during combat.\"\r\n\t]\r\n  },\r\n  \"Mango\": {\r\n\t\"NAME\": \"Mango\",\r\n\t\"FLAVOR\": \"The most coveted forgotten fruit. Impeccably preserved with no signs of Spireblight.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Raise your Max HP by #b\"\r\n\t]\r\n  },\r\n  \"Mark of Pain\": {\r\n\t\"NAME\": \"Mark of Pain\",\r\n\t\"FLAVOR\": \"This brand was used by the northern tribes to signify warriors who had mastered pain in battle.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Gain [R] at the start of each turn. Start combats with #b2 #rWounds in your draw pile.\"\r\n\t]\r\n  },\r\n  \"Matryoshka\": {\r\n\t\"NAME\": \"Matryoshka\",\r\n\t\"FLAVOR\": \"A stackable set of painted dolls. The paint depicts an unknown bird with white eyes and blue feathers.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"The next #b2 chests you open contain #b2 #yRelics. (Excludes boss chests)\",\r\n\t\"The next chest you open contains #b2 #yRelics. (Excludes boss chests)\",\r\n\t\"This relic has been used up.\"\r\n\t]\r\n  },\r\n  \"Meat on the Bone\": {\r\n\t\"NAME\": \"Meat on the Bone\",\r\n\t\"FLAVOR\": \"The meat keeps replenishing, never seeming to fully run out.\",\r\n    \"DESCRIPTIONS\": [ \r\n\t\"If your HP is at or below #b50% at the end of combat, heal #b\",\r\n\t\" HP.\"\r\n\t]\r\n  },\r\n  \"Medical Kit\": {\r\n\t\"NAME\": \"Medical Kit\",\r\n\t\"FLAVOR\": \"\\\\\"Has everything you need! Anti-itch, anti-burn, anti-venom, and more!\\\\\"\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"#yStatus cards can now be played. Playing a #yStatus will #yExhaust the card.\"\r\n\t]\r\n  },\r\n  \"Membership Card\": {\r\n\t\"NAME\": \"Membership Card\",\r\n\t\"FLAVOR\": \"\\\\\"Bonus membership offer for my most valuable customers!\\\\\"\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"In future acts, shops appear #b50% more often. #yBONUS: #b20% discount on all products!\"\r\n\t]\r\n  },\r\n  \"Mercury Hourglass\": {\r\n\t\"NAME\": \"Mercury Hourglass\",\r\n\t\"FLAVOR\": \"An enchanted hourglass that endlessly drips.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of your turn, deal #b\", \r\n\t\" damage to ALL enemies.\"\r\n\t]\r\n  },\r\n  \"Molten Egg\": {\r\n\t\"NAME\": \"Molten Egg\",\r\n\t\"FLAVOR\": \"The egg of a Phoenix. It glows red hot with a simmering lava.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pick up, choose and #yUpgrade an #yAttack.\",\r\n\t\"Choose a card for \"\r\n\t]\r\n  },\r\n  \"Mummified Hand\": {\r\n\t\"NAME\": \"Mummified Hand\",\r\n\t\"FLAVOR\": \"Frequently twitches, especially when your pulse is high.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you play a #yPower, a random card in your hand costs #b0 for the turn.\" \r\n\t]\r\n  },\r\n  \"Necronomicon\": {\r\n\t\"NAME\": \"Necronomicon\",\r\n\t\"FLAVOR\": \"Only a fool would try and harness this evil power. At night your dreams are haunted by images of the book devouring your mind.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"The first #yAttack played each turn that costs #b\",\r\n\t\" or more is played twice. When you take this relic, become #rCursed.\", \r\n\t\" or more is played twice.\"\r\n\t]\r\n  },\r\n  \"Nilry's Codex\": {\r\n\t\"NAME\": \"Nilry's Codex\",\r\n\t\"FLAVOR\": \"Crafted by the infamous game master himself. Said to expand one's mind.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the end of each turn, you can choose #b1 of #b3 random cards to shuffle into your draw pile.\"\r\n\t]\r\n  },\r\n  \"Nine Lives\": {\r\n\t\"NAME\": \"Nine Lives\",\r\n\t\"FLAVOR\": \"DEPRECATED.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"When you would die, heal to full HP instead. NL (Works #b9 times)\",\r\n\t\"When you would die, heal to full HP instead. NL (No more lives)\",\r\n\t\"When you would die, heal to full HP instead. NL (Works #b\", \r\n\t\" more times)\"\r\n\t]\r\n  },\r\n  \"Ninja Scroll\": {\r\n\t\"NAME\": \"Ninja Scroll\",\r\n\t\"FLAVOR\": \"Contains the secrets of assassination.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Start each combat with #b\", \r\n\t\" #yShivs in hand.\"\r\n\t]\r\n  },\r\n  \"Nloth's Gift\": {\r\n\t\"NAME\": \"Nloth's Gift\",\r\n\t\"FLAVOR\": \"The strange gift from N'loth. Whenever you try and unwrap it, another wrapped box of the same size lies within.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"#bTriples the chance of receiving rare cards as monster rewards.\"\r\n\t]\r\n  },\r\n  \"Nullstone Periapt\": {\r\n\t\"NAME\": \"Nullstone Periapt\",\r\n\t\"FLAVOR\": \"DEPRECATED.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Negate the next #yDebuff you receive from an enemy. NL Recharges in #b10 turns.\"\r\n\t]\r\n  },\r\n  \"Oddly Smooth Stone\": {\r\n\t\"NAME\": \"Oddly Smooth Stone\",\r\n\t\"FLAVOR\": \"You have never seen something so smooth and pristine. This must be the work of the Ancients.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, gain #b\", \r\n\t\" #yDexterity.\"\r\n\t]\r\n  },\r\n  \"Odd Mushroom\": {\r\n\t\"NAME\": \"Odd Mushroom\",\r\n\t\"FLAVOR\": \"\\\\\"After consuming trichella parastius I felt larger and less... susceptible.\\\\\" - Ranwid \",\r\n    \"DESCRIPTIONS\": [\r\n\t\"When #yVulnerable, take #b25% more damage rather than #b50%.\"\r\n\t]\r\n  },\r\n  \"Old Coin\": {\r\n\t\"NAME\": \"Old Coin\",\r\n\t\"FLAVOR\": \"Unique coins are highly valued by Merchants for their historical value and rare metallic composition.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Gain #b300 #yGold.\"\r\n\t]\r\n  },\r\n  \"Omamori\": {\r\n\t\"NAME\": \"Omamori\",\r\n\t\"FLAVOR\": \"A common charm for staving off vile spirits. This one seems to possess a spark of divine energy.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Negate the next #b2 #rCurses you obtain.\", \r\n\t\"Negate the next #rCurse you obtain.\", \r\n\t\"This relic is all used up.\" \r\n\t]\r\n  },\r\n  \"Orichalcum\": {\r\n\t\"NAME\": \"Orichalcum\",\r\n\t\"FLAVOR\": \"A green tinted metal of an unknown origin. Seemingly indestructible.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"If you end your turn without #yBlock, gain #b\", \r\n\t\" #yBlock.\"\r\n\t]\r\n  },\r\n  \"Ornamental Fan\": {\r\n\t\"NAME\": \"Ornamental Fan\",\r\n\t\"FLAVOR\": \"The fan seems to extend and harden as blood is spilled.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Every time you play #b3 #yAttacks in a single turn, gain #b\",\r\n\t\" #yBlock.\"\r\n\t]\r\n  },\r\n  \"Orrery\": {\r\n\t\"NAME\": \"Orrery\",\r\n\t\"FLAVOR\": \"\\\\\"Once you understand the universe...\\\\\" - Zoroth\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Choose and add #b5 cards to your deck.\", \r\n\t\"Knowledge!\"\r\n\t]\r\n  },\r\n  \"Pandora's Box\": {\r\n\t\"NAME\": \"Pandora's Box\",\r\n\t\"FLAVOR\": \"You have a bad feeling about opening this.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"#bTransform all Strikes and Defends.\",\r\n\t\"Pandoras Box has been opened...\"\r\n\t]\r\n  },\r\n  \"Pantograph\": {\r\n\t\"NAME\": \"Pantograph\",\r\n\t\"FLAVOR\": \"\\\\\"Solid foundations are not accidental. Tools for planning are a must.\\\\\" - The Architect\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of boss combats, heal #b\", \r\n\t\" HP.\"\r\n\t]\r\n  },\r\n  \"Paper Crane\": {\r\n\t\"NAME\": \"Paper Krane\",\r\n\t\"FLAVOR\": \"An origami of a creature from a past age.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Enemies with #yWeak deal #b50% less damage rather than #b25%.\"\r\n\t]\r\n  },\r\n  \"Paper Frog\": {\r\n\t\"NAME\": \"Paper Phrog\",\r\n\t\"FLAVOR\": \"The paper continually folds and unfolds itself into the shape of a small creature.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Enemies with #yVulnerable take #b75% more damage rather than #b50%.\"\r\n\t]\r\n  },\r\n  \"Peace Pipe\": {\r\n\t\"NAME\": \"Peace Pipe\",\r\n\t\"FLAVOR\": \"Clears the mind and cleanses the soul.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"You can now remove cards from your deck at Rest Sites.\"\r\n\t]\r\n  },\r\n  \"Pear\": {\r\n\t\"NAME\": \"Pear\",\r\n\t\"FLAVOR\": \"A common fruit before the Spireblight.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Raise your Max HP by #b\"\r\n\t]\r\n  },\r\n  \"Pen Nib\": {\r\n\t\"NAME\": \"Pen Nib\",\r\n\t\"FLAVOR\": \"Holding the nib, you can see everyone ever slain by a previous owner of the pen. A violent history.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Every #b10th #yAttack you play deals double damage.\"\r\n\t]\r\n  },\r\n  \"Philosopher's Stone\": {\r\n\t\"NAME\": \"Philosopher's Stone\",\r\n\t\"FLAVOR\": \"Raw energy emanates from the stone, empowering all nearby.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\" ALL enemies start with #b2 #yStrength.\",\r\n\t\"Gain [R] at the start of each turn.\", \r\n\t\"Gain [G] at the start of each turn.\",\r\n\t\"Gain [B] at the start of each turn.\"\r\n\t]\r\n  },\r\n  \"Prayer Wheel\": {\r\n\t\"NAME\": \"Prayer Wheel\",\r\n\t\"FLAVOR\": \"The wheel continues to spin, never stopping.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Non-Boss chests now also contain cards.\"\r\n\t]\r\n  },\r\n  \"Question Card\": {\r\n\t\"NAME\": \"Question Card\",\r\n\t\"FLAVOR\": \"\\\\\"Those with more choices minimize the downside to chaos.\\\\\" - Kublai the Great\",\r\n    \"DESCRIPTIONS\": [\r\n\t \"On Card Reward screens, choose from #b4 cards instead of #b3.\"\r\n\t]\r\n  },\r\n  \"Red Circlet\": {\r\n\t\"NAME\": \"Red Circlet\",\r\n\t\"FLAVOR\": \"You ran out of relics. Impressive!\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Looks very pretty.\"\r\n\t]\r\n  },\r\n  \"Red Mask\": {\r\n\t\"NAME\": \"Red Mask\",\r\n\t\"FLAVOR\": \"This very stylish looking mask belongs to the leader of the Red Mask Bandits. Technically that makes you the leader now?\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, apply #b\", \r\n\t\" #yWeak to ALL enemies.\"\r\n\t]\r\n  },\r\n  \"Red Skull\": {\r\n\t\"NAME\": \"Red Skull\",\r\n\t\"FLAVOR\": \"A small skull covered in ornamental paint.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"While your HP is at or below #b50%, you have #b\",\r\n\t\" additional #yStrength.\"\r\n\t]\r\n  },\r\n  \"Regal Pillow\": {\r\n\t\"NAME\": \"Regal Pillow\",\r\n\t\"FLAVOR\": \"Now you can get a proper night's rest.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Heal an additional #b\", \r\n\t\" HP when you #yRest.\"\r\n\t]\r\n  },\r\n  \"Ring of the Serpent\": {\r\n\t\"NAME\": \"Ring of the Serpent\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Replaces #gSnake #gRing. If you defeat an #yElite enemy, raise your Max HP by #b\"\r\n\t]\r\n  },\r\n  \"Runic Cube\": {\r\n\t\"NAME\": \"Runic Cube\",\r\n\t\"FLAVOR\": \"The runes are indecipherable.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you lose HP, draw #b\",\r\n\t\" card.\",\r\n\t\"\"\r\n\t]\r\n  },\r\n  \"Runic Dome\": {\r\n\t\"NAME\": \"Runic Dome\",\r\n\t\"FLAVOR\": \"The runes are indecipherable.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"at the start of each turn. You can no longer see enemy #bIntents.\",\r\n\t\"Gain [R] \", \r\n\t\"Gain [G] \", \r\n\t\"Gain [B] \"\r\n\t]\r\n  },\r\n  \"Runic Pyramid\": {\r\n\t\"NAME\": \"Runic Pyramid\",\r\n\t\"FLAVOR\": \"The runes are indecipherable.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the end of your turn, you no longer discard your hand. NL Draw #b\", \r\n\t\" less card each turn.\" \r\n\t]\r\n  },\r\n  \"Self Forming Clay\": {\r\n\t\"NAME\": \"Self-Forming Clay\",\r\n\t\"FLAVOR\": \"\\\\\"Most curious! It appears to form itself loosely on my thoughts! Tele-clay?\\\\\" - Ranwid\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you lose HP in combat, gain #b\",\r\n\t\" #yBlock next turn.\"\r\n\t]\r\n  },\r\n  \"Shovel\": {\r\n\t\"NAME\": \"Shovel\",\r\n\t\"FLAVOR\": \"The Spire houses all number of relics from past civilizations and powerful adventurers lost to time. Time to go dig them up!\",\r\n    \"DESCRIPTIONS\": [\r\n\t \"You can now #yDig for loot at Rest Sites.\"\r\n\t]\r\n  },\r\n  \"Shuriken\": {\r\n\t\"NAME\": \"Shuriken\",\r\n\t\"FLAVOR\": \"Lightweight throwing weapons. Recommend going for the eyes.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Every time you play #b\", \r\n\t\" #yAttacks in a single turn, gain #b\",\r\n\t\" #yStrength.\"\r\n\t]\r\n  },\r\n  \"Singing Bowl\": {\r\n\t\"NAME\": \"Singing Bowl\",\r\n\t\"FLAVOR\": \"This well-used artifact rings out with a beautiful melody when struck.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"When adding cards to your deck, you may gain #b+2 Max HP instead.\"\r\n\t]\r\n  },\r\n  \"Smiling Mask\": {\r\n\t\"NAME\": \"Smiling Mask\",\r\n\t\"FLAVOR\": \"Mask worn by the merchant. He must have spares...\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"The merchant's card removal service now always costs #b\",\r\n\t\" #yGold.\"\r\n\t]\r\n  },\r\n  \"Ring of the Snake\": {\r\n\t\"NAME\": \"Ring of the Snake\",\r\n\t\"FLAVOR\": \"Made from a fossilized snake. Represents great skill as a huntress.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, draw #b\", \r\n\t\" additional cards.\"\r\n\t]\r\n  },\r\n  \"Snecko Eye\": {\r\n\t\"NAME\": \"Snecko Eye\",\r\n\t\"FLAVOR\": \"An eye of a fallen snecko. Much larger than you imagined.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Draw #b2 additional cards each turn. Start each combat #yConfused.\"\r\n\t]\r\n  },\r\n  \"Snake Skull\": {\r\n\t\"NAME\": \"Snecko Skull\",\r\n\t\"FLAVOR\": \"A snecko skull in pristine condition. Mysteriously clean and smooth, dirt and grime fall off inexplicably.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you apply #yPoison, apply an additional #b\", \r\n\t\" #yPoison.\"\r\n\t]\r\n  },\r\n  \"Sozu\": {\r\n\t\"NAME\": \"Sozu\",\r\n\t\"FLAVOR\": \"You notice that magical liquids seem to lose their properties when near this relic.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\" You can no longer use potions. \",\r\n\t\"Gain [R] at the start of each turn.\", \r\n\t\"Gain [G] at the start of each turn.\",\r\n\t\"Gain [B] at the start of each turn.\"\r\n\t]\r\n  },\r\n  \"Spirit Poop\": {\r\n\t\"NAME\": \"Spirit Poop\",\r\n\t\"FLAVOR\": \"The charred remains of your offering to the spirits.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"It's unpleasant.\"\r\n\t]\r\n  },\r\n  \"Strange Spoon\": {\r\n\t\"NAME\": \"Strange Spoon\",\r\n\t\"FLAVOR\": \"Staring at the spoon, it appears to bend and twist around before your eyes.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Cards which #yExhaust when played will instead discard #b50% of the time.\"\r\n\t]\r\n  },\r\n  \"Strawberry\": {\r\n\t\"NAME\": \"Strawberry\",\r\n\t\"FLAVOR\": \"\\\\\"Delicious! Haven't seen any of these since the blight.\\\\\" - Ranwid\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Raise your Max HP by #b\"\r\n\t]\r\n  },\r\n  \"Sundial\": {\r\n\t\"NAME\": \"Sundial\",\r\n\t\"FLAVOR\": \"\\\\\"Early man's foolish obsession with time caused them to look to the sky for guidance, hoping for something permanent.\\\\\" - Zoroth\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Every #b\", \r\n\t\" times you shuffle your deck, gain [R] [R] .\",\r\n\t\" times you shuffle your deck, gain [G] [G] .\",\r\n\t\" times you shuffle your deck, gain [B] [B] .\"\r\n\t]\r\n  },\r\n  \"Ancient Tea Set\": {\r\n\t\"NAME\": \"Ancient Tea Set\",\r\n\t\"FLAVOR\": \"The key to a refreshing night's rest.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you enter a Rest Site, start the next combat with [R] [R] .\",\r\n\t\"Whenever you enter a Rest Site, start the next combat with [G] [G] .\",\r\n\t\"Whenever you enter a Rest Site, start the next combat with [B] [B] .\"\r\n\t]\r\n  },\r\n  \"War Paint\": {\r\n\t\"NAME\": \"War Paint\",\r\n\t\"FLAVOR\": \"Missing description.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pick up, #yUpgrade #b\", \r\n\t\" random #ySkills.\"\r\n\t]\r\n  },\r\n  \"Darkstone Periapt\": {\r\n\t\"NAME\": \"Darkstone Periapt\",\r\n\t\"FLAVOR\": \"Missing description.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you obtain a #yCurse, increase your Max HP by #b\"\r\n\t]\r\n  },\r\n  \"Test 1\": {\r\n\t\"NAME\": \"Test 1\",\r\n\t\"FLAVOR\": \"Test relic for beta. If you like it, let the devs know.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you use a potion, gain \", \r\n\t\" [R] .\",\r\n\t\" [G] .\",\r\n\t\" [B] .\"\r\n\t]\r\n  },\r\n  \"Frozen Eye\": {\r\n\t\"NAME\": \"Frozen Eye\",\r\n\t\"FLAVOR\": \"No description.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"When viewing your #yDraw #yPile, the cards are now shown in order.\"\r\n\t]\r\n  },\r\n  \"Test 2\": {\r\n\t\"NAME\": \"Test 2\",\r\n\t\"FLAVOR\": \"Test relic for beta. If you like it, let the devs know.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"When viewing your #yDraw #yPile, the cards are now shown in order.\"\r\n\t]\r\n  },\r\n  \"Test 3\": {\r\n\t\"NAME\": \"Test 3\",\r\n\t\"FLAVOR\": \"Test relic for beta. If you like it, let the devs know.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"When obtained, #yUpgrade all of your #yDefend cards.\"\r\n\t]\r\n  },\r\n  \"Test 4\": {\r\n\t\"NAME\": \"Test 4\",\r\n\t\"FLAVOR\": \"Test relic for beta. If you like it, let the devs know.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of combat, the cost of all #yStrike cards are set to #b0.\"\r\n\t]\r\n  },\r\n  \"Test 5\": {\r\n\t\"NAME\": \"Test 5\",\r\n\t\"FLAVOR\": \"Test relic for beta. If you like it, let the devs know.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pick up, #yUpgrade #b\", \r\n\t\" random #ySkills.\"\r\n\t]\r\n  },\r\n  \"Test 6\": {\r\n\t\"NAME\": \"Test 6\",\r\n\t\"FLAVOR\": \"Test relic for beta. If you like it, let the devs know.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the end of each turn, gain #b\",\r\n\t\" #yBlock for every #b\",\r\n\t\" #yGold you have.\"\r\n\t]\r\n  },\r\n  \"Test 7\": {\r\n\t\"NAME\": \"Test 7\",\r\n\t\"FLAVOR\": \"Test relic for beta. If you like it, let the devs know.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"#yElites now drop #b2 #yRelics when defeated.\"\r\n\t]\r\n  },\r\n  \"Test 8\": {\r\n\t\"NAME\": \"Test 8\",\r\n\t\"FLAVOR\": \"Test relic for beta. If you like it, let the devs know.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Draw #b2 additional cards each turn. Start each combat #yConfused.\"\r\n\t]\r\n  },\r\n  \"The Specimen\": {\r\n\t\"NAME\": \"The Specimen\",\r\n\t\"FLAVOR\": \"\\\\\"Fascinating! I found a mutated creature demonstrating astounding toxic properties. Storing a sample for later examination.\\\\\" - Ranwid\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever an enemy dies, transfer any #yPoison it has to a random enemy.\" \r\n\t]\r\n  },\r\n  \"Thread and Needle\": {\r\n\t\"NAME\": \"Thread and Needle\",\r\n\t\"FLAVOR\": \"Wrapping the magical thread around your body, you feel harder to the touch.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, gain #b\", \r\n\t\" #yPlated #yArmor.\"\r\n\t]\r\n  },\r\n  \"Tingsha\": {\r\n\t\"NAME\": \"Tingsha\",\r\n\t\"FLAVOR\": \"The sound this instrument generates seems to be capable of reverberating to painful levels of volume.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you discard a card during your turn, deal #b\",\r\n\t\" damage to a random enemy for each card discarded.\"\r\n\t]\r\n  },\r\n  \"Tiny Chest\": {\r\n\t\"NAME\": \"Tiny Chest\",\r\n\t\"FLAVOR\": \"\\\\\"A fine prototype.\\\\\" - The Architect\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Gain #b\",\r\n\t\" #yGold. You are #b10% more likely to find treasure in ? rooms.\",\r\n\t\"You are #b10% more likely to find treasure in ? rooms.\"\r\n\t]\r\n  },\r\n  \"Tiny House\": {\r\n\t\"NAME\": \"Tiny House\",\r\n\t\"FLAVOR\": \"\\\\\"A near perfect implementation of miniaturization. My finest work to date, but still not adequate.\\\\\" - The Architect\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Obtain #b1 potion. NL Gain #b\",\r\n\t\" #yGold. NL Raise your Max HP by #b\", \r\n\t\". NL Obtain #b1 card. NL Upgrade #b1 random card.\",\r\n\t\"Tiny House!\"\r\n\t]\r\n  },\r\n  \"Toolbox\": {\r\n\t\"NAME\": \"Toolbox\",\r\n\t\"FLAVOR\": \"A tool for every job.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, add a random colorless card to your hand.\"\r\n\t]\r\n  },\r\n  \"Torii\": {\r\n\t\"NAME\": \"Torii\",\r\n\t\"FLAVOR\": \"Holding the small Torii, you feel a sense of calm and safety drift through your mind.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you would receive #b\",\r\n\t\" or less unblocked #yAttack damage, reduce it to #b1.\"\r\n\t]\r\n  },\r\n  \"Tough Bandages\": {\r\n\t\"NAME\": \"Tough Bandages\",\r\n\t\"FLAVOR\": \"Loss gives strength.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you discard a card during your turn, gain #b\",\r\n\t\" #yBlock.\"\r\n\t]\r\n  },\r\n  \"Toxic Egg\": {\r\n\t\"NAME\": \"Toxic Egg\",\r\n\t\"FLAVOR\": \"\\\\\"What a marvelous discovery! This appears to be the inert egg of some magical creature. Who or what created this?\\\\\" - Ranwid\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pick up, choose and #yUpgrade a #ySkill.\",\r\n\t\"Choose a card for \"\r\n\t]\r\n  },\r\n  \"Toy Ornithopter\": {\r\n\t\"NAME\": \"Toy Ornithopter\",\r\n\t\"FLAVOR\": \"\\\\\"This little toy is the perfect companion for the lone adventurer!\\\\\"\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you use a potion, heal #b\", \r\n\t\" HP.\"\r\n\t]\r\n  },\r\n  \"Unceasing Top\": {\r\n\t\"NAME\": \"Unceasing Top\",\r\n\t\"FLAVOR\": \"The top continues to spin effortlessly as if you were in a dream.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Whenever you have no cards in hand during your turn, draw a card.\"\r\n\t]\r\n  },\r\n  \"Vajra\": {\r\n\t\"NAME\": \"Vajra\",\r\n\t\"FLAVOR\": \"An ornamental relic given to warriors displaying glory in battle.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"At the start of each combat, gain #b\", \r\n\t\" #yStrength.\"\r\n\t]\r\n  },\r\n  \"Velvet Choker\": {\r\n\t\"NAME\": \"Velvet Choker\",\r\n\t\"FLAVOR\": \"\\\\\"Immense power, but too limited.\\\\\" - Kublai the Great\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"You cannot play more than #b\", \r\n\t\" cards per turn.\",\r\n\t\"Gain [R] at the start of each turn. \", \r\n\t\"Gain [G] at the start of each turn. \",\r\n\t\"Gain [B] at the start of each turn. \", \r\n\t\"I can only play up to NL #r\"\r\n\t]\r\n  },\r\n  \"Lee's Waffle\": {\r\n\t\"NAME\": \"Lee's Waffle\",\r\n\t\"FLAVOR\": \"\\\\\"Tastiest treat you will find in all the Spire! Baked today just for you.\\\\\"\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Raise your Max HP by #b\", \r\n\t\" and heal all of your HP.\"\r\n\t]\r\n  },\r\n  \"Whetstone\": {\r\n\t\"NAME\": \"Whetstone\",\r\n\t\"FLAVOR\": \"\\\\\"Flesh never beats steel.\\\\\" - Kublai the Great\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Upon pick up, #yUpgrade #b\", \r\n\t\" random #yAttacks.\"\r\n\t]\r\n  },\r\n  \"Derp Rock\": {\r\n\t\"NAME\": \"Derp Rock\",\r\n\t\"FLAVOR\": \"Placeholder\",\r\n    \"DESCRIPTIONS\": [\r\n\t\t\"At the start of each turn, gain #b\",\r\n\t\t\" Charge. NL (Cannot be removed or transformed.)\"\r\n\t]\r\n  },\r\n  \"NeowsBlessing\": {\r\n\t\"NAME\": \"Neow's Lament\",\r\n\t\"FLAVOR\": \"The blessing of lamentation bestowed by Neow.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\t\"Enemies in your first #b3 combats will have 1 HP.\",\r\n\t\t\"The blessing is used up.\"\r\n\t]\r\n  },\r\n  \"White Beast Statue\": {\r\n\t\"NAME\": \"White Beast Statue\",\r\n\t\"FLAVOR\": \"A small white statue of a creature you have never seen before.\",\r\n    \"DESCRIPTIONS\": [\r\n\t\"Potions always drop after combat.\"\r\n\t]\r\n  }\r\n}\r\n`;\r\n\r\nrelics = JSON.parse(relics);\r\n\r\nexport default relics","import React, {Component} from \"react\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport { actions } from '../utils/ReduxStore';\r\nimport relics from \"./RelicsJSON\";\r\nimport cards from \"./CardsJSON\";\r\nimport Search from './Search';\r\nimport Item from \"./Item\";\r\n\r\nconst bottledTypes = {\r\n    \"Bottled Lightning\": \"SKILL\",\r\n    \"Bottled Flame\":     \"ATTACK\",\r\n    \"Bottled Tornado\":   \"POWER\"\r\n}\r\n\r\nclass RelicSelector extends Component {\r\n\r\n    state = {\r\n        searchTerm: '',\r\n        bottled: false,\r\n    }\r\n\r\n    sortedRelics = Object.keys(relics).sort();\r\n\r\n    onSearchTermChanged = (searchTerm) => {\r\n        this.setState({searchTerm});\r\n    };\r\n\r\n    addRelic = (relic) => {\r\n        if (relic.startsWith(\"Bottled \")) {\r\n            this.setState({ bottled: relic });\r\n        } else {\r\n            this.props.actions.addRelic(relic);\r\n        }\r\n    }\r\n\r\n    finishBottling = (card) => {\r\n        this.props.actions.addRelic(this.state.bottled, card.id);\r\n        this.setState({ bottled: false});\r\n    }\r\n\r\n    render() {\r\n        const styles = {\r\n            relics: {\r\n                display: 'grid',\r\n                boxSizing: 'border-box',\r\n                overflowY: 'scroll',\r\n                height: 'calc(100vh - 103px)',\r\n                alignContent:'start'\r\n            },\r\n            modal: {\r\n                top: '50%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                transform: 'translate(-50%, -50%)'\r\n            }\r\n        };\r\n\r\n        const relicsList = this.sortedRelics\r\n            .filter(relic => relic.toLowerCase().startsWith(this.state.searchTerm.trim()))\r\n            .map((relic) => <Item type=\"RelicItem\" onClick={() => this.addRelic(relic)} name={relic} key={relic}/>)\r\n\r\n\r\n        const uniqueCards = this.props.cards.filter((card, i, arr) => arr.findIndex(c => c.id === card.id) === i);\r\n\r\n        const bottleableCardType = this.state.bottled && this.state.bottled in bottledTypes ? bottledTypes[this.state.bottled] : false\r\n        const bottleableCards = bottleableCardType ? uniqueCards.filter((card) => cards[card.id].type === bottleableCardType) : false\r\n\r\n        return (\r\n            <div>\r\n                <Search onSearchTermChanged={this.onSearchTermChanged}/>\r\n                <div style={styles.relics}>\r\n                    {relicsList}\r\n                </div>\r\n                <Modal isOpen={!!this.state.bottled} style={{content: styles.modal}}>\r\n                    {!bottleableCardType || bottleableCards.length === 0 ? (\r\n                        <div>\r\n                            { uniqueCards.length === 0 ? (\r\n                                <div>Can't add {this.state.bottled} if your deck is empty</div>\r\n                            ) : bottleableCards && bottleableCards.length === 0 ? (\r\n                                <div>Can't add {this.state.bottled} if your deck doesn't contain any {bottleableCardType[0] + bottleableCardType.substring(1).toLowerCase()} cards.</div>\r\n                            ) : (\r\n                                <div>This shouldn't happen.</div>\r\n                            )}\r\n                            <br/>\r\n                            <button style={{width: '100%'}} onClick={() => this.setState({ bottled: false })}>Ok</button>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <div>Select a card for your {this.state.bottled}</div>\r\n                            <br/>\r\n                            {bottleableCards.map((card, i) => \r\n                                <Item type=\"CardItem\"\r\n                                    name={card.id}\r\n                                    onClick={() => this.finishBottling(card)}\r\n                                    key={i}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Modal>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    cards: state.data.cards\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RelicSelector);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ItemNavBar from \"./ItemNavBar\";\r\nimport CardSelector from \"./CardSelector\";\r\nimport RelicSelector from './RelicSelector';\r\n\r\nclass ItemList extends Component {\r\n    render() {\r\n        const styles = {\r\n            cardlist: {\r\n                height: '100vh',\r\n                width: '50vw',\r\n                overflowX: 'hidden'\r\n            },\r\n            content: {\r\n                height: 'calc(100vh - 60px)',\r\n                boxSizing: 'border-box'\r\n            }\r\n        };\r\n\r\n        let content;\r\n        if (this.props.itemPage === 'Cards') {\r\n            content = <CardSelector/>\r\n        } else if (this.props.itemPage === 'Relics') {\r\n            content = <RelicSelector/>\r\n        }\r\n\r\n        return (\r\n            <div style={styles.cardlist}>\r\n                <ItemNavBar/>\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    itemPage: state.itemPage \r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(ItemList);\r\n","import React, {Component} from \"react\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../utils/ReduxStore'\r\nimport NavItem from \"./NavItem\";\r\n\r\nclass SaveEditNavBar extends Component{\r\n\r\n    render(){\r\n\r\n        const styles = {\r\n            navbar: {\r\n                display: 'grid',\r\n                gridTemplateColumns: '50% 50%',\r\n                backgroundColor: '#3e383a',\r\n                height: '60px',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                color: 'white'\r\n            },\r\n        };\r\n\r\n        return(\r\n            <div style={styles.navbar}>\r\n                <NavItem \r\n                    isSelected={this.props.savePage === 'Basic'}\r\n                    name={'Basic'}\r\n                    onClick={() => this.props.actions.selectBasic()}\r\n                />\r\n                <NavItem \r\n                    isSelected={this.props.savePage === 'Advanced'}\r\n                    name={'Advanced'}\r\n                    onClick={() => this.props.actions.selectAdvanced()}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    savePage: state.savePage \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveEditNavBar);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actions } from '../utils/ReduxStore'\r\n\r\nimport Item from \"./Item\";\r\n\r\nclass CardList extends Component {\r\n    render() {\r\n\r\n        const styles = {\r\n            cardlist: {\r\n                gridColumn: \"1\",\r\n                gridRow: '2',\r\n                display: 'grid',\r\n                gridTemplateColumns: '20% 20% 20% 20% 20%',\r\n                gridAutoRows: '40px',\r\n                overflowY: 'scroll',\r\n                minHeight: '40px',\r\n                maxHeight: '240px',\r\n                marginBottom: '20px',\r\n                boxSizing: 'border-box'\r\n            }\r\n        };\r\n\r\n        // The bottled name may match multiple cards, but only one gets the highlight\r\n        const bottledIndices = ['bottled_tornado', 'bottled_flame', 'bottled_lightning']\r\n            .filter(key => this.props.data[key] !== undefined)\r\n            .map(key => this.props.cards.findIndex(card => card.id === this.props.data[key]));\r\n\r\n        return (\r\n            <div>\r\n                <label>Cards:</label>\r\n                <div style={styles.cardlist}>\r\n                    {this.props.cards.map((card, i) => \r\n                        <Item type=\"Card\"\r\n                            name={\r\n                                card.id + (card.upgrades > 0 \r\n                                || (card.upgrades.value !== undefined && card.upgrades.value !== \"0\") \r\n                                ? '+' : '')\r\n                            } \r\n                            bottled={bottledIndices.includes(i)}\r\n                            onClick={() => this.props.actions.removeCard(i)} \r\n                            key={i}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    data: state.data,\r\n    cards: state.data.cards\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport Item from \"./Item\";\r\nimport { actions } from \"../utils/ReduxStore\";\r\n\r\nclass RelicList extends Component {\r\n    render() {\r\n\r\n        const styles = {\r\n            reliclist: {\r\n                gridColumn: \"1\",\r\n                gridRow: '3',\r\n                display: 'grid',\r\n                gridTemplateColumns: '20% 20% 20% 20% 20%',\r\n                gridAutoRows: '40px',\r\n                overflowY: 'scroll',\r\n                overflowX: 'hidden',\r\n                minHeight: '40px',\r\n                maxHeight: '240px',\r\n                marginBottom: '20px',\r\n                boxSizing: 'border-box'\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <label>Relics:</label>\r\n                <div style={styles.reliclist}>\r\n                    {this.props.relics.map((relic, i) => \r\n                        <Item type=\"Relic\" \r\n                            name={relic} \r\n                            bottled={relic.startsWith('Bottled ')}\r\n                            onClick={() => this.props.actions.removeRelic(i)}\r\n                            key={i} \r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    relics: state.data.relics\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RelicList);\r\n","let potions = `{\r\n    \"Ancient Potion\": {\r\n        \"NAME\": \"Ancient Potion\",\r\n        \"DESCRIPTION\": \"Gain #b1 #yArtifact.\"\r\n    },\r\n    \"Block Potion\": {\r\n        \"NAME\": \"Block Potion\",\r\n        \"DESCRIPTION\": \"Gain #b12 #yBlock.\"\r\n    },\r\n    \"Dexterity Potion\": {\r\n        \"NAME\": \"Dexterity Potion\",\r\n        \"DESCRIPTION\": \"Gain #b2 #yDexterity.\"\r\n    },\r\n    \"Elixir\": {\r\n        \"NAME\": \"Elixir\",\r\n        \"DESCRIPTION\": \"#yExhaust all #yStatus and #yCurse cards from your hand.\"\r\n    },\r\n    \"Energy Potion\": {\r\n        \"NAME\": \"Energy Potion\",\r\n        \"DESCRIPTION\": \"Gain #b2 Energy.\"\r\n    },\r\n    \"Explosive Potion\": {\r\n        \"NAME\": \"Explosive Potion\",\r\n        \"DESCRIPTION\": \"Deal #b10 damage to ALL enemies.\"\r\n    },\r\n    \"Fire Potion\": {\r\n        \"NAME\": \"Fire Potion\",\r\n        \"DESCRIPTION\": \"Deal #b20 damage.\"\r\n    },\r\n    \"Health Potion\": {\r\n        \"NAME\": \"Health Potion\",\r\n        \"DESCRIPTION\": \"Heal #b9 HP.\"\r\n    },\r\n    \"Poison Potion\": {\r\n        \"NAME\": \"Poison Potion\",\r\n        \"DESCRIPTION\": \"Apply #b6 #yPoison.\"\r\n    },\r\n    \"Potion Slot\": {\r\n        \"NAME\": \"Potion Slot\",\r\n        \"DESCRIPTION\": \"Use potions during combat to gain #gbonuses or #rhinder enemies.\"\r\n    },\r\n    \"Regen Potion\": {\r\n        \"NAME\": \"Regen Potion\",\r\n        \"DESCRIPTION\": \"Heal #b3 #yHP at the end of each turn for #b5 turns.\"\r\n    },\r\n    \"Strength Potion\": {\r\n        \"NAME\": \"Strength Potion\",\r\n        \"DESCRIPTION\": \"Gain #b2 #yStrength.\"\r\n    },\r\n    \"Swift Potion\": {\r\n        \"NAME\": \"Swift Potion\",\r\n        \"DESCRIPTION\": \"Draw #b3 cards.\"\r\n    },\r\n    \"Weak Potion\": {\r\n        \"NAME\": \"Weak Potion\",\r\n        \"DESCRIPTION\": \"Apply #b3 #yWeak.\"\r\n    }\r\n}\r\n`;\r\n\r\npotions = JSON.parse(potions);\r\n\r\nexport default potions;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actions } from '../utils/ReduxStore'\r\nimport Modal from 'react-modal';\r\nimport potions from \"./PotionsJSON\";\r\n\r\nimport Item from \"./Item\";\r\n\r\nclass PotionList extends Component {\r\n\r\n    state = {\r\n        showModal: false,\r\n        modalIndex: 0\r\n    }\r\n\r\n    sortedPotions = [\"Potion Slot\", ...Object.keys(potions).filter((potion) => potion !== \"Potion Slot\").sort()]\r\n\r\n    render() {\r\n\r\n        const styles = {\r\n            potionlist: {\r\n                gridColumn: \"1\",\r\n                gridRow: '2',\r\n                display: 'grid',\r\n                gridTemplateColumns: '20% 20% 20% 20% 20%',\r\n                gridAutoRows: '64px',\r\n                minHeight: '64px',\r\n                maxHeight: '256px',\r\n                marginBottom: '20px',\r\n                boxSizing: 'border-box'\r\n            },\r\n            modal: {\r\n                top: '50%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                transform: 'translate(-50%, -50%)'\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <label>Potions:</label>\r\n                <div style={styles.potionlist}>\r\n                    {this.props.potions.map((potion, i) =>\r\n                        <Item type=\"Potion\"\r\n                            name={potion} \r\n                            onClick={() => {this.setState({modalIndex: i}); this.setState({showModal: true})}}\r\n                            key={i}\r\n                            item={potions[potion]}\r\n                            id={`potion-${i}`}\r\n                            active={false}\r\n                            isPlaceholder={potion === \"Potion Slot\"}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <Modal isOpen={this.state.showModal} style={{content: styles.modal}}>\r\n                    <div style={styles.potionlist}>\r\n                        {this.sortedPotions.map((potion, i) => \r\n                            <Item type=\"Potion\" \r\n                                onClick={() => {this.setState({showModal: false}); this.props.actions.setPotion(this.state.modalIndex, potion)}}\r\n                                name={potion}\r\n                                key={potion}\r\n                                item={potions[potion]}\r\n                                id={`potion-popup-${i}`}\r\n                                active={potion === this.props.potions[this.state.modalIndex]}\r\n                                isPlaceholder={potion === \"Potion Slot\"}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    data: state.data,\r\n    potions: state.data.potions\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionList);\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../utils/ReduxStore';\r\n\r\nclass MiscList extends Component {\r\n\r\n    updateValues = (event, key) => {\r\n        this.props.actions.updateMisc(key, event.target.value);\r\n    };\r\n\r\n    render() {\r\n\r\n        const styles = {\r\n            misc: {\r\n                gridRow: \"1\",\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"min-content 50px\",\r\n                whiteSpace: 'nowrap',\r\n                marginBottom: \"20px\",\r\n                boxSizing: 'border-box'\r\n            }\r\n        };\r\n\r\n        const attributes = {\r\n            'current_health': 'Current Health',\r\n            'max_health': 'Max Health',\r\n            'gold': 'Gold',\r\n            'hand_size': 'Hand Size'\r\n        };\r\n        \r\n\r\n        return (\r\n            <div style={styles.misc}>\r\n                {Object.entries(attributes).map(([key, label]) => [\r\n                    <label key={key+'label'}>{label + ': '}</label>,\r\n                    <input key={key+'input'} type=\"number\" value={this.props.data[key]} onChange={event => this.updateValues(event, key)}/>\r\n                ])}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    data: state.data \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiscList);\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport CardList from './CardList'\r\nimport RelicList from \"./RelicList\";\r\nimport PotionList from \"./PotionList\";\r\nimport MiscList from \"./MiscList\";\r\nimport { actions } from \"../utils/ReduxStore\"\r\n\r\nclass Editor extends Component {\r\n    showConverter = () => {\r\n        if (this.props.data.seed !== undefined) {\r\n            this.props.actions.selectConverter();\r\n        } else {\r\n            alert('You must upload a save file first!');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const styles = {\r\n            editor: {\r\n                gridColumn: \"1\",\r\n                gridRow: \"2\",\r\n                display: \"grid\"\r\n            },\r\n            textarea: {\r\n                height: \"45vh\",\r\n                width: \"99%\"\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div style={styles.editor}>\r\n                <MiscList/>\r\n                <CardList/>\r\n                <RelicList/>\r\n                <PotionList/>\r\n                <button onClick={this.showConverter}>Generate Save File</button>\r\n                <p>\r\n                    Welcome to the new Basic option for the save editor!  To learn how to use it: <a href=\"https://github.com/zuelong/save-the-spire/blob/master/Basic.md\">click here!</a>\r\n                    <br/>\r\n                    <br/>\r\n                    Otherwise, you can click \"Advanced\" on the top of the screen to use the old version of the save editor!\r\n                </p>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    data: state.data \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../utils/ReduxStore'\r\nimport { bindActionCreators } from 'redux';\r\nimport * as LosslessJSON from 'lossless-json';\r\n\r\nclass FileUpload extends Component {\r\n    state = {\r\n        file: null\r\n    }\r\n\r\n    convertToByteArray = (data) => {\r\n        let byte_array = [];\r\n\r\n        for (let i = 0; i < data.length; i++){\r\n            byte_array.push(data.charCodeAt(i));\r\n        }\r\n\r\n        return byte_array\r\n    };\r\n\r\n    xorWithKey = (data, key) => {\r\n        let out = [];\r\n        data = this.convertToByteArray(data);\r\n        key = this.convertToByteArray(key);\r\n\r\n        for(let i = 0; i < data.length; i++) {\r\n            out.push(String.fromCharCode(data[i] ^ key[i % key.length]));\r\n        }\r\n\r\n        return out.join('');\r\n    };\r\n\r\n    decrypt = (encrypted) => {\r\n        try {\r\n            let decrypted = this.xorWithKey(atob(encrypted), \"key\");\r\n            return LosslessJSON.parse(decrypted);\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n            alert('Invalid Base64')\r\n        }\r\n    };\r\n\r\n    readFile = (f) => {\r\n        let reader = new FileReader();\r\n        reader.onload = (evt) => {\r\n            let data = evt.target.result;\r\n            this.props.actions.updateJson(this.decrypt(data));\r\n        };\r\n\r\n        reader.readAsText(f);\r\n    };\r\n\r\n    handleFileSelect = (evt) => {\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n\r\n        let files = evt.dataTransfer.files; // FileList object.\r\n\r\n        // files is a FileList of File objects. List some properties.\r\n        let f = files[0];\r\n\r\n        this.setState({file: f});\r\n        this.readFile(f);\r\n\r\n        this.props.actions.setFileName(f.name);\r\n    };\r\n\r\n    handleDragOver = (evt) => {\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n        evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\r\n    };\r\n\r\n    createFileInfo() {\r\n        const file = this.state.file;\r\n        if (!file) {\r\n            return null;\r\n        }\r\n        const name = escape(file.name);\r\n        const type = file.type || 'n/a';\r\n        const size = file.size;\r\n        const lastModified = file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() : 'n/a';\r\n        return (\r\n            <ul>\r\n                <li>\r\n                    <strong>{name}</strong> ({type}) - {size} bytes, last modified: {lastModified}\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const styles = {\r\n            fileupload: {\r\n                gridColumn: \"1\",\r\n                gridRow: \"1\",\r\n                padding: '10px',\r\n                margin: '10px',\r\n                border: '1px solid #ccc',\r\n            },\r\n            dropzone: {\r\n                border: '2px dashed #bbb',\r\n                borderRadius: '5px',\r\n                padding: '25px',\r\n                textAlign: 'center',\r\n                font: '20pt bold',\r\n                color: '#bbb',\r\n            },\r\n            textarea: {\r\n                height: \"45vh\",\r\n                width: \"99%\"\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div style={styles.fileupload}>\r\n                <div id=\"drop_zone\" onDragOver={this.handleDragOver} onDrop={this.handleFileSelect} style={styles.dropzone}>Drop file here</div>\r\n                {this.createFileInfo()}\r\n                <output id=\"list\"></output>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FileUpload);\r\n","import React, { Component } from 'react';\r\nimport Editor from './Editor'\r\nimport FileUpload from './FileUpload'\r\n\r\nclass Basic extends Component {\r\n\r\n    render() {\r\n\r\n        const styles = {\r\n            basic: {\r\n                gridColumn: \"1\",\r\n                display: 'grid'\r\n            },\r\n            textarea: {\r\n                height: \"45vh\",\r\n                width: \"99%\"\r\n            },\r\n            fileupload: {\r\n                gridColumn: \"1\",\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div style={styles.basic}>\r\n                <FileUpload/>\r\n                <Editor/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Basic;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as LosslessJSON from 'lossless-json';\r\n\r\nclass Advanced extends Component {\r\n\r\n    state = {\r\n        base64: '',\r\n        json: '',\r\n    }\r\n\r\n    convertToByteArray = (data) => {\r\n        let byte_array = [];\r\n\r\n        for (let i = 0; i < data.length; i++){\r\n            byte_array.push(data.charCodeAt(i));\r\n        }\r\n\r\n        return byte_array\r\n    };\r\n\r\n    xorWithKey = (data, key) => {\r\n        let out = [];\r\n        data = this.convertToByteArray(data);\r\n        key = this.convertToByteArray(key);\r\n\r\n        for(let i = 0; i < data.length; i++) {\r\n            out.push(String.fromCharCode(data[i] ^ key[i % key.length]));\r\n        }\r\n\r\n        return out.join('');\r\n    };\r\n\r\n    decrypt = () => {\r\n        try {\r\n            const encrypted = this.state.base64;\r\n            let decrypted = this.xorWithKey(atob(encrypted), \"key\");\r\n            this.setState({json: LosslessJSON.stringify(LosslessJSON.parse(decrypted), null, 2)});\r\n        }\r\n        catch(e) {\r\n            alert('Invalid Base64')\r\n        }\r\n    };\r\n\r\n    encrypt = () => {\r\n        try {\r\n            const decrypted = this.state.json;\r\n            let encrypted = btoa(this.xorWithKey(decrypted, \"key\"));\r\n            this.setState({base64: encrypted})\r\n        }\r\n        catch(e){\r\n            alert('Invalid JSON')\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.receiveData(this.props.data);\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        if (nextProps.data !== this.props.data) {\r\n            this.receiveData(nextProps.data);\r\n        }\r\n    }\r\n\r\n    receiveData(data) {\r\n        const json = LosslessJSON.stringify(data, null, 2);\r\n        const base64 = btoa(this.xorWithKey(json, \"key\"))\r\n        this.setState({json, base64});\r\n    }\r\n\r\n    handleBase64Change = (event) => {\r\n        this.setState({base64: event.target.value});\r\n    }\r\n\r\n    handleJsonChange = (event) => {\r\n        this.setState({json: event.target.value});\r\n    }\r\n\r\n    render() {\r\n\r\n        const styles = {\r\n            textbox: {\r\n                gridColumn: \"1\",\r\n            },\r\n            textarea: {\r\n                height: \"40vh\",\r\n                width: \"99%\"\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div style={styles.textbox}>\r\n                <textarea placeholder=\"Enter Base64 Here\" style={styles.textarea} value={this.state.base64} onChange={this.handleBase64Change}/>\r\n                <br />\r\n                <button onClick={this.decrypt}>to JSON</button>\r\n                <button onClick={this.encrypt}>to Base64</button>\r\n                <br />\r\n                <textarea placeholder=\"Enter JSON Here\" style={styles.textarea} value={this.state.json} onChange={this.handleJsonChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    data: state.data \r\n});\r\n\r\nexport default connect(mapStateToProps)(Advanced);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../utils/ReduxStore'\r\nimport { bindActionCreators } from 'redux';\r\nimport * as LosslessJSON from 'lossless-json';\r\n\r\nclass Converter extends Component {\r\n    convertToByteArray = (data) => {\r\n        let byte_array = [];\r\n\r\n        for (let i = 0; i < data.length; i++){\r\n            byte_array.push(data.charCodeAt(i));\r\n        }\r\n\r\n        return byte_array\r\n    };\r\n\r\n    xorWithKey = (data, key) => {\r\n        let out = [];\r\n        data = this.convertToByteArray(data);\r\n        key = this.convertToByteArray(key);\r\n\r\n        for(let i = 0; i < data.length; i++) {\r\n            out.push(String.fromCharCode(data[i] ^ key[i % key.length]));\r\n        }\r\n\r\n        return out.join('');\r\n    };\r\n\r\n    encrypt = (data) => {\r\n        try {\r\n            const decrypted = LosslessJSON.stringify(data);\r\n            let encrypted = btoa(this.xorWithKey(decrypted, \"key\"));\r\n            return encrypted;\r\n        }\r\n        catch(e){\r\n            alert('Invalid JSON')\r\n        }\r\n    };\r\n\r\n    downloadFile = () => {\r\n        let filename = (this.props.filename.startsWith(\"IRONCLAD\") ? \"IRONCLAD\" : this.props.filename.startsWith(\"THE_SILENT\") ? \"THE_SILENT\" : \"UNKNOWN_CHARACTER\") + \".autosave\"\r\n        let element = document.createElement(\"a\")\r\n        let file = new Blob([this.encrypt(this.props.data)], {type: 'text/plain'})\r\n        element.href = URL.createObjectURL(file)\r\n        element.download = filename\r\n        element.click()\r\n    }\r\n\r\n    render() {\r\n\r\n        const styles = {\r\n            textbox: {\r\n                gridColumn: \"1\",\r\n            },\r\n            textarea: {\r\n                height: \"40vh\",\r\n                width: \"99%\"\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div style={styles.textbox}>\r\n                <textarea id=\"text1\" style={styles.textarea} readOnly value={this.encrypt(this.props.data)}/>\r\n                <br />\r\n                <button onClick={this.downloadFile}>Download File</button>\r\n                <button onClick={this.props.actions.selectBasic}>Back</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    data: state.data,\r\n    filename: state.filename\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Converter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SaveEditNavBar from \"./SaveEditNavBar\";\r\nimport Basic from \"./Basic\";\r\nimport Advanced from './Advanced';\r\nimport Converter from './Converter';\r\n\r\nclass SaveEdit extends Component{\r\n    render(){\r\n        let content;\r\n        if (this.props.savePage === 'Basic') {\r\n            content = <Basic/>\r\n        } else if (this.props.savePage === 'Advanced') {\r\n            content = <Advanced/>\r\n        } else if (this.props.savePage === 'Converter') {\r\n            content = <Converter/>\r\n        }\r\n        return(\r\n            <div>\r\n                <SaveEditNavBar/>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    savePage: state.savePage \r\n});\r\n\r\nexport default connect(mapStateToProps)(SaveEdit);\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport './App.css';\r\nimport ItemList from \"./components/ItemList\";\r\nimport { store } from \"./utils/ReduxStore\";\r\nimport SaveEdit from \"./components/SaveEdit\";\r\n\r\nconst styles = {\r\n  app: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"50% 50%\",\r\n      boxSizing: 'border-box'\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div style={styles.app}>\r\n            <SaveEdit/>\r\n            <ItemList/>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}